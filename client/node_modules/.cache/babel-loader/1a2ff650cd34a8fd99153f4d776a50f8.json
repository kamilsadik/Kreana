{"ast":null,"code":"var _jsxFileName = \"/Users/kamilalizaisadik/DeFi/Dynamic Automated Market Maker/CreatorTokenExchange/client/src/HoldingsTable.jsx\";\nimport React, { Component, useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper'; //import DisplayHoldings from \"./DisplayHoldings.jsx\";\n\nimport { userHoldings } from \"./UserHoldings.jsx\";\nimport { tokens } from \"./Inventory.jsx\";\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 350\n  }\n});\n\nconst HoldingsTable = props => {\n  const {\n    address,\n    name,\n    symbol,\n    description,\n    verified,\n    outstanding,\n    maxSupply,\n    lastPrice,\n    creatorTokenId\n  } = props;\n  const classes = useStyles();\n  const [holdingsState, setHoldingsState] = useState([]);\n  console.log(userHoldings);\n  useEffect(() => {\n    async function fetchData() {\n      setHoldingsState(await userHoldings);\n    }\n\n    fetchData();\n  }, []);\n  const [tokenState, setTokenState] = useState([]);\n  useEffect(() => {\n    async function fetchData() {\n      setTokenState(await tokens);\n    }\n\n    fetchData();\n  }, []);\n\n  function createData(token, amountHeld) {\n    return {\n      token,\n      amountHeld\n    };\n  }\n\n  const rows = [createData(tokenState.map(tokenObj => tokenObj.symbol)[0], holdingsState[0]), createData(tokenState.symbol, holdingsState[1]), createData('Token 2', holdingsState[2])];\n  return /*#__PURE__*/React.createElement(TableContainer, {\n    component: Paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    className: classes.table,\n    size: \"small\",\n    \"aria-label\": \"a dense table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(TableHead, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  }, \"Token\"), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  }, \"Holdings\"))), /*#__PURE__*/React.createElement(TableBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }, rows.map(row => /*#__PURE__*/React.createElement(TableRow, {\n    key: row.token,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    component: \"th\",\n    scope: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 15\n    }\n  }, row.token), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 15\n    }\n  }, row.amountHeld))))));\n};\n\nexport default HoldingsTable;","map":{"version":3,"sources":["/Users/kamilalizaisadik/DeFi/Dynamic Automated Market Maker/CreatorTokenExchange/client/src/HoldingsTable.jsx"],"names":["React","Component","useState","useEffect","makeStyles","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","userHoldings","tokens","useStyles","table","minWidth","HoldingsTable","props","address","name","symbol","description","verified","outstanding","maxSupply","lastPrice","creatorTokenId","classes","holdingsState","setHoldingsState","console","log","fetchData","tokenState","setTokenState","createData","token","amountHeld","rows","map","tokenObj","row"],"mappings":"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","sourcesContent":["import React, { Component, useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\n//import DisplayHoldings from \"./DisplayHoldings.jsx\";\nimport { userHoldings } from \"./UserHoldings.jsx\";\nimport { tokens } from \"./Inventory.jsx\";\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 350,\n  },\n});\n\nconst HoldingsTable = props => {\n  const {\n    address,\n    name,\n    symbol,\n    description,\n    verified,\n    outstanding,\n    maxSupply,\n    lastPrice,\n    creatorTokenId,\n  } = props;\n\n  const classes = useStyles();\n\n  const [holdingsState, setHoldingsState] = useState([]);\n  console.log(userHoldings);\n  useEffect(() => {\n    async function fetchData() {\n      setHoldingsState(await userHoldings);\n    }\n    fetchData();\n  }, []);\n\n  const [tokenState, setTokenState] = useState([]);\n  useEffect(() => {\n    async function fetchData() {\n      setTokenState(await tokens);\n    }\n    fetchData();\n  }, []);\n\n  function createData(token, amountHeld) {\n    return { token, amountHeld };\n  }\n\n  const rows = [\n    createData(tokenState.map(tokenObj => tokenObj.symbol)[0], holdingsState[0]),\n    createData(tokenState.symbol, holdingsState[1]),\n    createData('Token 2', holdingsState[2]),\n  ];\n\n  return (\n    <TableContainer component={Paper}>\n      <Table className={classes.table} size=\"small\" aria-label=\"a dense table\">\n        <TableHead>\n          <TableRow>\n            <TableCell>Token</TableCell>\n            <TableCell align=\"right\">Holdings</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {rows.map((row) => (\n            <TableRow key={row.token}>\n              <TableCell component=\"th\" scope=\"row\">\n                {row.token}\n              </TableCell>\n              <TableCell align=\"right\">{row.amountHeld}</TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n\n\n}\n\nexport default HoldingsTable"]},"metadata":{},"sourceType":"module"}