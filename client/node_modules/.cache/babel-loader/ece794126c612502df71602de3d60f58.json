{"ast":null,"code":"var _jsxFileName = \"/Users/kamilalizaisadik/DeFi/Dynamic Automated Market Maker/CreatorTokenExchange/client/src/App.js\";\nimport React, { Component, useState } from \"react\";\nimport { Grid } from \"@material-ui/core\";\nimport Header from \"./Header\";\nimport Content from \"./Content\";\nimport Form from \"./NewTokenForm\";\nimport Web3 from './web3';\nimport { ABI } from './ABI';\nconst web3 = new Web3(Web3.givenProvider); // contract address is provided by Truffle migration\n\nconst contractAddr = '0xDB5F79f0961dF7581AB361F414602D958ED10ACE';\nconst ContractInstance = new web3.eth.Contract(ABI, contractAddr);\n\nfunction App() {\n  const [number, setNumber] = useState(0);\n  const [getNumber, setGetNumber] = useState('0x00');\n  return /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    direction: \"column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    container: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: false,\n    sm: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Content, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: false,\n    sm: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  })));\n}\n\n;\n\nconst handleSet = async e => {\n  e.preventDefault();\n  const accounts = await window.ethereum.enable();\n  const account = accounts[0];\n  const gas = await SimpleContract.methods.set(number).estimateGas();\n  const result = await SimpleContract.methods.set(number).send({\n    from: account,\n    gas\n  });\n  console.log(result);\n};\n\n{\n  /*\n  class App extends Component {\n   componentWillMount() {\n     this.loadBlockchainData()\n   }\n    async loadBlockchainData() {\n     window.ethereum.enable();\n     const web3 = new Web3(Web3.givenProvider || \"http://localhost:8545\")\n     const accounts = await web3.eth.getAccounts()\n     this.setState({ account: accounts[0] })\n   }\n    constructor(props) {\n     super(props)\n     this.state = { account: '' }\n   }\n    render() {\n       return (\n     <Grid container direction=\"column\">\n       <Grid item>\n         <Header />\n       </Grid>\n       <Grid item container>\n         <Grid item xs={false} sm={2} />\n         <Grid item xs={12} sm={8}>\n           <Content />\n         </Grid>\n         <Grid item xs={false} sm={2} />\n       </Grid>\n     </Grid>\n   );\n   }\n  }\n  {*/\n\n  /*}\n  const Apps = () => {\n      return (\n      <Grid container direction=\"column\">\n        <Grid item>\n          <Header />\n        </Grid>\n        <Grid item container>\n          <Grid item xs={false} sm={2} />\n          <Grid item xs={12} sm={8}>\n            <Content />\n          </Grid>\n          <Grid item xs={false} sm={2} />\n        </Grid>\n      </Grid>\n    );\n  };\n  */\n}\nexport default App;","map":{"version":3,"sources":["/Users/kamilalizaisadik/DeFi/Dynamic Automated Market Maker/CreatorTokenExchange/client/src/App.js"],"names":["React","Component","useState","Grid","Header","Content","Form","Web3","ABI","web3","givenProvider","contractAddr","ContractInstance","eth","Contract","App","number","setNumber","getNumber","setGetNumber","handleSet","e","preventDefault","accounts","window","ethereum","enable","account","gas","SimpleContract","methods","set","estimateGas","result","send","from","console","log"],"mappings":"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","sourcesContent":["import React, { Component, useState } from \"react\";\nimport { Grid } from \"@material-ui/core\";\nimport Header from \"./Header\";\nimport Content from \"./Content\";\nimport Form from \"./NewTokenForm\";\nimport Web3 from './web3';\nimport { ABI } from './ABI';\n\nconst web3 = new Web3(Web3.givenProvider);\n// contract address is provided by Truffle migration\nconst contractAddr = '0xDB5F79f0961dF7581AB361F414602D958ED10ACE';\nconst ContractInstance = new web3.eth.Contract(ABI, contractAddr);\n\nfunction App() {\n  const [number, setNumber] = useState(0);\n  const [getNumber, setGetNumber] = useState('0x00');\n\n      return (\n    <Grid container direction=\"column\">\n      <Grid item>\n        <Header />\n      </Grid>\n      <Grid item container>\n        <Grid item xs={false} sm={2} />\n        <Grid item xs={12} sm={8}>\n          <Content />\n        </Grid>\n        <Grid item xs={false} sm={2} />\n      </Grid>\n    </Grid>\n  );\n};\n\nconst handleSet = async (e) => {\n  e.preventDefault();    \n  const accounts = await window.ethereum.enable();\n  const account = accounts[0];\n  const gas = await SimpleContract.methods.set(number)\n                      .estimateGas();\n  const result = await SimpleContract.methods.set(number).send({\n    from: account,\n    gas \n  })\n  console.log(result);\n}\n\n\n{/*\nclass App extends Component {\n  componentWillMount() {\n    this.loadBlockchainData()\n  }\n\n  async loadBlockchainData() {\n    window.ethereum.enable();\n    const web3 = new Web3(Web3.givenProvider || \"http://localhost:8545\")\n    const accounts = await web3.eth.getAccounts()\n    this.setState({ account: accounts[0] })\n  }\n\n  constructor(props) {\n    super(props)\n    this.state = { account: '' }\n  }\n\n  render() {\n      return (\n    <Grid container direction=\"column\">\n      <Grid item>\n        <Header />\n      </Grid>\n      <Grid item container>\n        <Grid item xs={false} sm={2} />\n        <Grid item xs={12} sm={8}>\n          <Content />\n        </Grid>\n        <Grid item xs={false} sm={2} />\n      </Grid>\n    </Grid>\n  );\n  }\n}\n{*/\n\n/*}\nconst Apps = () => {\n    return (\n    <Grid container direction=\"column\">\n      <Grid item>\n        <Header />\n      </Grid>\n      <Grid item container>\n        <Grid item xs={false} sm={2} />\n        <Grid item xs={12} sm={8}>\n          <Content />\n        </Grid>\n        <Grid item xs={false} sm={2} />\n      </Grid>\n    </Grid>\n  );\n};\n*/}\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}