{"ast":null,"code":"import React from \"react\";\nimport { FormControl, InputLabel, FormLabel, FormHelperText, Input } from '@material-ui/core'; // These imports are needed to implement Web3, and to connect the React client to the Ethereum server\n\nimport Web3 from './web3';\nimport { ABI } from './ABI';\nimport { contractAddr } from './Address';\nconst web3 = new Web3(Web3.givenProvider); // Contract address is provided by Truffle migration\n\nconst ContractInstance = new web3.eth.Contract(ABI, contractAddr);\n\nconst NewTokenForm = () => {\n  // Initialize empty array of Creator Tokens\n  let tokens = [];\n\n  async function handleCreatorTokenCount() {\n    const creatorTokenCount = await ContractInstance.methods.getCreatorTokenCount().call();\n    console.log(creatorTokenCount);\n    return creatorTokenCount;\n  }\n\n  async function handleCreatorTokens(qty) {\n    for (let i = 0; i < qty; i++) {\n      const token = await ContractInstance.methods.creatorTokens(i).call();\n      tokens.push(token);\n    }\n\n    console.log(tokens);\n  }\n\n  async function handler() {\n    await handleCreatorTokens(await handleCreatorTokenCount());\n  }\n\n  handler();\n  return null;\n};\n\nexport default NewTokenForm;","map":{"version":3,"sources":["/Users/kamilalizaisadik/DeFi/Dynamic Automated Market Maker/CreatorTokenExchange/client/src/NewTokenForm.jsx"],"names":["React","FormControl","InputLabel","FormLabel","FormHelperText","Input","Web3","ABI","contractAddr","web3","givenProvider","ContractInstance","eth","Contract","NewTokenForm","tokens","handleCreatorTokenCount","creatorTokenCount","methods","getCreatorTokenCount","call","console","log","handleCreatorTokens","qty","i","token","creatorTokens","push","handler"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,UAAtB,EAAkCC,SAAlC,EAA6CC,cAA7C,EAA6DC,KAA7D,QAA0E,mBAA1E,C,CACA;;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,SAASC,GAAT,QAAoB,OAApB;AACA,SAASC,YAAT,QAA6B,WAA7B;AAEA,MAAMC,IAAI,GAAG,IAAIH,IAAJ,CAASA,IAAI,CAACI,aAAd,CAAb,C,CACA;;AACA,MAAMC,gBAAgB,GAAG,IAAIF,IAAI,CAACG,GAAL,CAASC,QAAb,CAAsBN,GAAtB,EAA2BC,YAA3B,CAAzB;;AAEA,MAAMM,YAAY,GAAG,MAAM;AAE1B;AACA,MAAIC,MAAM,GAAG,EAAb;;AAEA,iBAAeC,uBAAf,GAAyC;AACxC,UAAMC,iBAAiB,GAAG,MAAMN,gBAAgB,CAACO,OAAjB,CAAyBC,oBAAzB,GAAgDC,IAAhD,EAAhC;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYL,iBAAZ;AACA,WAAOA,iBAAP;AACA;;AAED,iBAAeM,mBAAf,CAAmCC,GAAnC,EAAwC;AACvC,SAAK,IAAIC,CAAC,GAAC,CAAX,EAAcA,CAAC,GAACD,GAAhB,EAAqBC,CAAC,EAAtB,EAA0B;AACzB,YAAMC,KAAK,GAAG,MAAMf,gBAAgB,CAACO,OAAjB,CAAyBS,aAAzB,CAAuCF,CAAvC,EAA0CL,IAA1C,EAApB;AACAL,MAAAA,MAAM,CAACa,IAAP,CAAYF,KAAZ;AACA;;AACDL,IAAAA,OAAO,CAACC,GAAR,CAAYP,MAAZ;AACA;;AAED,iBAAec,OAAf,GAAwB;AACvB,UAAMN,mBAAmB,CAAC,MAAMP,uBAAuB,EAA9B,CAAzB;AACA;;AAEDa,EAAAA,OAAO;AAEP,SACC,IADD;AAIA,CA7BD;;AA+BA,eAAef,YAAf","sourcesContent":["import React from \"react\";\nimport { FormControl, InputLabel, FormLabel, FormHelperText, Input } from '@material-ui/core';\n// These imports are needed to implement Web3, and to connect the React client to the Ethereum server\nimport Web3 from './web3';\nimport { ABI } from './ABI';\nimport { contractAddr } from './Address';\n\nconst web3 = new Web3(Web3.givenProvider);\n// Contract address is provided by Truffle migration\nconst ContractInstance = new web3.eth.Contract(ABI, contractAddr);\n\nconst NewTokenForm = () => {\n\n\t// Initialize empty array of Creator Tokens\n\tlet tokens = [];\n\n\tasync function handleCreatorTokenCount() {\n\t\tconst creatorTokenCount = await ContractInstance.methods.getCreatorTokenCount().call();\n\t\tconsole.log(creatorTokenCount);\n\t\treturn(creatorTokenCount)\n\t}\n\n\tasync function handleCreatorTokens(qty) {\n\t\tfor (let i=0; i<qty; i++) {\n\t\t\tconst token = await ContractInstance.methods.creatorTokens(i).call();\n\t\t\ttokens.push(token);\n\t\t}\n\t\tconsole.log(tokens);\n\t}\n\n\tasync function handler(){\n\t\tawait handleCreatorTokens(await handleCreatorTokenCount());\n\t}\n\n\thandler();\n\n\treturn (\n\t\tnull\n\t);\n\n};\n\nexport default NewTokenForm;"]},"metadata":{},"sourceType":"module"}