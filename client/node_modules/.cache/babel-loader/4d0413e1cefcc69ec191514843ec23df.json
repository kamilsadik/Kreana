{"ast":null,"code":"import React from \"react\";\nimport Button from \"@material-ui/core/Button\"; // These imports are needed to implement Web3, and to connect the React client to the Ethereum server\n\nimport Web3 from './web3';\nimport { ABI } from './ABI';\nimport { contractAddr } from './Address';\nconst web3 = new Web3(Web3.givenProvider); // Contract address is provided by Truffle migration\n\nconst ContractInstance = new web3.eth.Contract(ABI, contractAddr);\n\nconst OwnerDashboard = () => {\n  async function handleWithdraw(e) {\n    e.preventDefault();\n    const accounts = await window.ethereum.enable();\n    const account = accounts[0];\n    const gas = await ContractInstance.methods.withdraw(account).estimateGas({\n      from: account\n    });\n    const result = await await ContractInstance.methods.withdraw(account).send({\n      from: account\n    });\n    console.log(result);\n  }\n\n  async function handlePayoutPlatformFees(e) {\n    e.preventDefault();\n    const accounts = await window.ethereum.enable();\n    const account = accounts[0];\n    const gas = await ContractInstance.methods.withdraw(account).estimateGas({\n      from: account\n    });\n    const result = await await ContractInstance.methods.withdraw(account).send({\n      from: account\n    });\n    console.log(result);\n  }\n\n  return null;\n};\n\nexport default OwnerDashboard;","map":{"version":3,"sources":["/Users/kamilalizaisadik/DeFi/Dynamic Automated Market Maker/CreatorTokenExchange/client/src/OwnerDashboard.js"],"names":["React","Button","Web3","ABI","contractAddr","web3","givenProvider","ContractInstance","eth","Contract","OwnerDashboard","handleWithdraw","e","preventDefault","accounts","window","ethereum","enable","account","gas","methods","withdraw","estimateGas","from","result","send","console","log","handlePayoutPlatformFees"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,0BAAnB,C,CACA;;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,SAASC,GAAT,QAAoB,OAApB;AACA,SAASC,YAAT,QAA6B,WAA7B;AAEA,MAAMC,IAAI,GAAG,IAAIH,IAAJ,CAASA,IAAI,CAACI,aAAd,CAAb,C,CACA;;AACA,MAAMC,gBAAgB,GAAG,IAAIF,IAAI,CAACG,GAAL,CAASC,QAAb,CAAsBN,GAAtB,EAA2BC,YAA3B,CAAzB;;AAEA,MAAMM,cAAc,GAAG,MAAM;AAE3B,iBAAeC,cAAf,CAA8BC,CAA9B,EAAiC;AAC/BA,IAAAA,CAAC,CAACC,cAAF;AACA,UAAMC,QAAQ,GAAG,MAAMC,MAAM,CAACC,QAAP,CAAgBC,MAAhB,EAAvB;AACA,UAAMC,OAAO,GAAGJ,QAAQ,CAAC,CAAD,CAAxB;AACA,UAAMK,GAAG,GAAG,MAAMZ,gBAAgB,CAACa,OAAjB,CAAyBC,QAAzB,CAAkCH,OAAlC,EAA2CI,WAA3C,CAAuD;AACvEC,MAAAA,IAAI,EAAEL;AADiE,KAAvD,CAAlB;AAGA,UAAMM,MAAM,GAAG,MAAM,MAAMjB,gBAAgB,CAACa,OAAjB,CAAyBC,QAAzB,CAAkCH,OAAlC,EAA2CO,IAA3C,CAAgD;AACzEF,MAAAA,IAAI,EAAEL;AADmE,KAAhD,CAA3B;AAGAQ,IAAAA,OAAO,CAACC,GAAR,CAAYH,MAAZ;AACD;;AAED,iBAAeI,wBAAf,CAAwChB,CAAxC,EAA2C;AACzCA,IAAAA,CAAC,CAACC,cAAF;AACA,UAAMC,QAAQ,GAAG,MAAMC,MAAM,CAACC,QAAP,CAAgBC,MAAhB,EAAvB;AACA,UAAMC,OAAO,GAAGJ,QAAQ,CAAC,CAAD,CAAxB;AACA,UAAMK,GAAG,GAAG,MAAMZ,gBAAgB,CAACa,OAAjB,CAAyBC,QAAzB,CAAkCH,OAAlC,EAA2CI,WAA3C,CAAuD;AACvEC,MAAAA,IAAI,EAAEL;AADiE,KAAvD,CAAlB;AAGA,UAAMM,MAAM,GAAG,MAAM,MAAMjB,gBAAgB,CAACa,OAAjB,CAAyBC,QAAzB,CAAkCH,OAAlC,EAA2CO,IAA3C,CAAgD;AACzEF,MAAAA,IAAI,EAAEL;AADmE,KAAhD,CAA3B;AAGAQ,IAAAA,OAAO,CAACC,GAAR,CAAYH,MAAZ;AACD;;AAIF,SACC,IADD;AAGA,CAjCD;;AAmCA,eAAed,cAAf","sourcesContent":["import React from \"react\";\nimport Button from \"@material-ui/core/Button\";\n// These imports are needed to implement Web3, and to connect the React client to the Ethereum server\nimport Web3 from './web3';\nimport { ABI } from './ABI';\nimport { contractAddr } from './Address';\n\nconst web3 = new Web3(Web3.givenProvider);\n// Contract address is provided by Truffle migration\nconst ContractInstance = new web3.eth.Contract(ABI, contractAddr);\n\nconst OwnerDashboard = () => {\n\n  async function handleWithdraw(e) {\n    e.preventDefault();    \n    const accounts = await window.ethereum.enable();\n    const account = accounts[0];\n    const gas = await ContractInstance.methods.withdraw(account).estimateGas({\n      from: account,\n    });\n    const result = await await ContractInstance.methods.withdraw(account).send({\n      from: account\n    })\n    console.log(result);\n  }\n\n  async function handlePayoutPlatformFees(e) {\n    e.preventDefault();    \n    const accounts = await window.ethereum.enable();\n    const account = accounts[0];\n    const gas = await ContractInstance.methods.withdraw(account).estimateGas({\n      from: account,\n    });\n    const result = await await ContractInstance.methods.withdraw(account).send({\n      from: account\n    })\n    console.log(result);\n  }\n\n\n\n\treturn (\n\t\tnull\n\t);\n}\n\nexport default OwnerDashboard;"]},"metadata":{},"sourceType":"module"}