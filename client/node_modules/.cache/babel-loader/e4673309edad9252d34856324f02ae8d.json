{"ast":null,"code":"import React from \"react\";\nimport { FormControl, InputLabel, FormLabel, FormHelperText, Input } from '@material-ui/core'; // These imports are needed to implement Web3, and to connect the React client to the Ethereum server\n\nimport Web3 from './web3';\nimport { ABI } from './ABI';\nimport { contractAddr } from './Address';\nconst web3 = new Web3(Web3.givenProvider); // Contract address is provided by Truffle migration\n\nconst ContractInstance = new web3.eth.Contract(ABI, contractAddr);\n\nconst NewTokenForm = () => {\n  async function handleCreatorTokens(e) {\n    const creatorTokenCount = await ContractInstance.methods.getCreatorTokenCount();\n\n    for (let i = 0; i < creatorTokenCount; i++) {\n      const item = await ContractInstance.methods.creatorTokens(i);\n      console.log(`publicData[${i}] = ${item}`);\n    } //const result = await ContractInstance.methods.creatorTokens().call();\n    //console.log(result);\n    //return (\n    //\tresult\n    //)\n\n  }\n};\n\nexport default NewTokenForm;","map":{"version":3,"sources":["/Users/kamilalizaisadik/DeFi/Dynamic Automated Market Maker/CreatorTokenExchange/client/src/NewTokenForm.js"],"names":["React","FormControl","InputLabel","FormLabel","FormHelperText","Input","Web3","ABI","contractAddr","web3","givenProvider","ContractInstance","eth","Contract","NewTokenForm","handleCreatorTokens","e","creatorTokenCount","methods","getCreatorTokenCount","i","item","creatorTokens","console","log"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,UAAtB,EAAkCC,SAAlC,EAA6CC,cAA7C,EAA6DC,KAA7D,QAA0E,mBAA1E,C,CACA;;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,SAASC,GAAT,QAAoB,OAApB;AACA,SAASC,YAAT,QAA6B,WAA7B;AAEA,MAAMC,IAAI,GAAG,IAAIH,IAAJ,CAASA,IAAI,CAACI,aAAd,CAAb,C,CACA;;AACA,MAAMC,gBAAgB,GAAG,IAAIF,IAAI,CAACG,GAAL,CAASC,QAAb,CAAsBN,GAAtB,EAA2BC,YAA3B,CAAzB;;AAEA,MAAMM,YAAY,GAAG,MAAM;AAE1B,iBAAeC,mBAAf,CAAmCC,CAAnC,EAAsC;AACrC,UAAMC,iBAAiB,GAAG,MAAMN,gBAAgB,CAACO,OAAjB,CAAyBC,oBAAzB,EAAhC;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,iBAApB,EAAuCG,CAAC,EAAxC,EAA4C;AAC3C,YAAMC,IAAI,GAAG,MAAMV,gBAAgB,CAACO,OAAjB,CAAyBI,aAAzB,CAAuCF,CAAvC,CAAnB;AACAG,MAAAA,OAAO,CAACC,GAAR,CAAa,cAAaJ,CAAE,OAAMC,IAAK,EAAvC;AACA,KALoC,CAOpC;AACA;AACA;AACA;AACA;;AACD;AAGD,CAjBD;;AAmBA,eAAeP,YAAf","sourcesContent":["import React from \"react\";\nimport { FormControl, InputLabel, FormLabel, FormHelperText, Input } from '@material-ui/core';\n// These imports are needed to implement Web3, and to connect the React client to the Ethereum server\nimport Web3 from './web3';\nimport { ABI } from './ABI';\nimport { contractAddr } from './Address';\n\nconst web3 = new Web3(Web3.givenProvider);\n// Contract address is provided by Truffle migration\nconst ContractInstance = new web3.eth.Contract(ABI, contractAddr);\n\nconst NewTokenForm = () => {\n\n\tasync function handleCreatorTokens(e) {\n\t\tconst creatorTokenCount = await ContractInstance.methods.getCreatorTokenCount();\n\t\tfor (let i = 0; i < creatorTokenCount; i++) {\n\t\t\tconst item = await ContractInstance.methods.creatorTokens(i);\n\t\t\tconsole.log(`publicData[${i}] = ${item}`);\n\t\t}\n\n\t  //const result = await ContractInstance.methods.creatorTokens().call();\n\t  //console.log(result);\n\t  //return (\n\t  //\tresult\n\t  //)\n\t}\n\n\n};\n\nexport default NewTokenForm;"]},"metadata":{},"sourceType":"module"}