{"ast":null,"code":"var _jsxFileName = \"/Users/kamilalizaisadik/DeFi/Dynamic Automated Market Maker/CreatorTokenExchange/client/src/TokenCard.jsx\";\nimport React, { Component, useState, useEffect } from \"react\";\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport ShareIcon from \"@material-ui/icons/Share\";\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport { Avatar, IconButton, CardMedia } from \"@material-ui/core\"; // These imports are needed to implement Web3, and to connect the React client to the Ethereum server\n\nimport Web3 from './web3';\nimport { ABI } from './ABI';\nimport { contractAddr } from './Address'; // These imports are needed for the Dialog\n\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { createTheme, ThemeProvider } from '@material-ui/core/styles';\nconst BuyTextTypography = withStyles({\n  root: {\n    color: \"#46d182\"\n  }\n})(Typography);\nconst SellTextTypography = withStyles({\n  root: {\n    color: \"#f53b6a\"\n  }\n})(Typography);\nconst darkTheme = createTheme({\n  palette: {\n    type: 'dark'\n  }\n});\nconst web3 = new Web3(Web3.givenProvider); // Contract address is provided by Truffle migration\n\nconst ContractInstance = new web3.eth.Contract(ABI, contractAddr);\n\nconst TokenCard = props => {\n  const {\n    address,\n    name,\n    symbol,\n    description,\n    verified,\n    outstanding,\n    maxSupply,\n    lastPrice,\n    creatorTokenId //avatarUrl,\n    //imageUrl\n\n  } = props; // Initalize open/closed state for buy dialog\n\n  const [buyOpen, setBuyOpen] = React.useState(false);\n\n  const handleClickBuyOpen = () => {\n    setBuyOpen(true);\n  };\n\n  const handleBuyClose = () => {\n    setBuyOpen(false);\n    setAmount('');\n  }; // Initialze open/closed state for sell dialog\n\n\n  const [sellOpen, setSellOpen] = React.useState(false);\n\n  const handleClickSellOpen = () => {\n    setSellOpen(true);\n  };\n\n  const handleSellClose = () => {\n    setSellOpen(false);\n    setAmount('');\n  }; // Initialize state for user-specified amount in text field\n\n\n  const [amount, setAmount] = React.useState(''); // Initialize state for transaction proceeds required\n\n  const [transactionProceeds, setTransactionProceeds] = React.useState(0);\n\n  const handleTransactionAmount = amt => {\n    amt = Math.round(amt);\n\n    if (amt == 0) {\n      setAmount('');\n    } else {\n      setAmount(amt);\n    }\n  };\n\n  async function getBuyProceeds(creatorTokenId) {\n    const buyProceeds = await ContractInstance.methods._totalProceeds(creatorTokenId, 500).call();\n    return buyProceeds;\n  }\n\n  const [buyProceeds, setBuyProceeds] = React.useState(0);\n\n  const handlePreBuyAmount = async amt => {\n    handleTransactionAmount(amt);\n    setBuyProceeds(getBuyProceeds(creatorTokenId));\n  }; // Invoke buyCreatorToken\n\n\n  async function handleBuyCreatorToken(e, creatorTokenId) {\n    e.preventDefault();\n    const accounts = await window.ethereum.enable();\n    const account = accounts[0];\n    const proceeds = await ContractInstance.methods._totalProceeds(creatorTokenId, amount).call({\n      from: account\n    });\n    const gas = await ContractInstance.methods.buyCreatorToken(creatorTokenId, amount).estimateGas({\n      from: account,\n      value: proceeds\n    });\n    const result = await ContractInstance.methods.buyCreatorToken(creatorTokenId, amount).send({\n      from: account,\n      gas: gas,\n      value: proceeds\n    });\n    console.log(result);\n    handleBuyClose();\n  } // Invoke sellCreatorToken\n\n\n  async function handleSellCreatorToken(e, creatorTokenId) {\n    e.preventDefault();\n    const accounts = await window.ethereum.enable();\n    const account = accounts[0];\n    const gas = await ContractInstance.methods.sellCreatorToken(creatorTokenId, amount, account).estimateGas({\n      from: account\n    });\n    const result = await ContractInstance.methods.sellCreatorToken(creatorTokenId, amount, account).send({\n      from: account\n    });\n    console.log(result);\n    handleSellClose();\n  }\n\n  return /*#__PURE__*/React.createElement(ThemeProvider, {\n    theme: darkTheme,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader //avatar={<Avatar src={avatarUrl} />}\n  , {\n    title: name,\n    action: verified ? /*#__PURE__*/React.createElement(IconButton, {\n      \"aria-label\": \"settings\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(CheckCircleIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 65\n      }\n    })) : null,\n    subheader: \"$\" + symbol,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body2\",\n    component: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 13\n    }\n  }, \"Last Price: \" + (lastPrice / 1000000000000000000).toFixed(6) + \" ETH\", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 81\n    }\n  }), \"Tokens Outstanding: \" + outstanding, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 51\n    }\n  }), description)), /*#__PURE__*/React.createElement(CardActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"outlined\",\n    onClick: handleClickBuyOpen,\n    fullWidth: \"true\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(BuyTextTypography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 17\n    }\n  }, \"Buy\")), /*#__PURE__*/React.createElement(Dialog, {\n    open: buyOpen,\n    onClose: handleBuyClose,\n    \"aria-labelledby\": \"form-dialog-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(DialogTitle, {\n    id: \"form-dialog-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 17\n    }\n  }, \"Buy Token\"), /*#__PURE__*/React.createElement(DialogContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(DialogContentText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 19\n    }\n  }, \"How many tokens do you wish to purchase?\", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 61\n    }\n  }), \"(Note: Must be a whole number of tokens)\"), /*#__PURE__*/React.createElement(TextField, {\n    autoFocus: true,\n    margin: \"dense\",\n    id: \"name\",\n    label: \"Quantity\",\n    placeholder: \"100\",\n    type: \"number\",\n    fullWidth: true,\n    value: amount,\n    onChange: event => {\n      handlePreBuyAmount(event.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(DialogContentText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 17\n    }\n  }, \"Total Transaction Value: \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 44\n    }\n  }), \"Price per Token:\")), /*#__PURE__*/React.createElement(DialogActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: handleBuyClose,\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 19\n    }\n  }, \"Cancel\"), /*#__PURE__*/React.createElement(Button, {\n    value: creatorTokenId,\n    onClick: e => handleBuyCreatorToken(e, creatorTokenId),\n    color: \"primary\",\n    disabled: amount == '',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 19\n    }\n  }, \"Complete Transaction\")))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"outlined\",\n    color: \"secondary\",\n    onClick: handleClickSellOpen,\n    fullWidth: \"true\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(SellTextTypography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 17\n    }\n  }, \"Sell\")), /*#__PURE__*/React.createElement(Dialog, {\n    open: sellOpen,\n    onClose: handleSellClose,\n    \"aria-labelledby\": \"form-dialog-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(DialogTitle, {\n    id: \"form-dialog-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 17\n    }\n  }, \"Sell Token\"), /*#__PURE__*/React.createElement(DialogContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(DialogContentText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 19\n    }\n  }, \"How many tokens do you wish to sell?\", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 57\n    }\n  }), \"(Note: Must be a whole number of tokens)\"), /*#__PURE__*/React.createElement(TextField, {\n    autoFocus: true,\n    margin: \"dense\",\n    id: \"name\",\n    label: \"Quantity\",\n    placeholder: \"100\",\n    type: \"number\",\n    fullWidth: true,\n    value: amount,\n    onChange: event => {\n      handleTransactionAmount(event.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(DialogContentText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 17\n    }\n  }, \"Total Transaction Value: \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 44\n    }\n  }), \"Price per Token:\")), /*#__PURE__*/React.createElement(DialogActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: handleSellClose,\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 19\n    }\n  }, \"Cancel\"), /*#__PURE__*/React.createElement(Button, {\n    value: creatorTokenId,\n    onClick: e => handleSellCreatorToken(e, creatorTokenId),\n    color: \"primary\",\n    disabled: amount == '',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 19\n    }\n  }, \"Complete Transaction\")))))));\n};\n\nexport default TokenCard;","map":{"version":3,"sources":["/Users/kamilalizaisadik/DeFi/Dynamic Automated Market Maker/CreatorTokenExchange/client/src/TokenCard.jsx"],"names":["React","Component","useState","useEffect","makeStyles","withStyles","Card","CardHeader","CardActions","CardContent","Typography","Button","ShareIcon","CheckCircleIcon","Avatar","IconButton","CardMedia","Web3","ABI","contractAddr","TextField","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","createTheme","ThemeProvider","BuyTextTypography","root","color","SellTextTypography","darkTheme","palette","type","web3","givenProvider","ContractInstance","eth","Contract","TokenCard","props","address","name","symbol","description","verified","outstanding","maxSupply","lastPrice","creatorTokenId","buyOpen","setBuyOpen","handleClickBuyOpen","handleBuyClose","setAmount","sellOpen","setSellOpen","handleClickSellOpen","handleSellClose","amount","transactionProceeds","setTransactionProceeds","handleTransactionAmount","amt","Math","round","getBuyProceeds","buyProceeds","methods","_totalProceeds","call","setBuyProceeds","handlePreBuyAmount","handleBuyCreatorToken","e","preventDefault","accounts","window","ethereum","enable","account","proceeds","from","gas","buyCreatorToken","estimateGas","value","result","send","console","log","handleSellCreatorToken","sellCreatorToken","toFixed","event","target"],"mappings":"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","sourcesContent":["import React, { Component, useState, useEffect } from \"react\";\r\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport ShareIcon from \"@material-ui/icons/Share\";\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\r\nimport { Avatar, IconButton, CardMedia } from \"@material-ui/core\";\r\n// These imports are needed to implement Web3, and to connect the React client to the Ethereum server\r\nimport Web3 from './web3';\r\nimport { ABI } from './ABI';\r\nimport { contractAddr } from './Address';\r\n// These imports are needed for the Dialog\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport { createTheme, ThemeProvider } from '@material-ui/core/styles';\r\n\r\nconst BuyTextTypography = withStyles({\r\n  root: {\r\n    color: \"#46d182\"\r\n  }\r\n})(Typography);\r\n\r\nconst SellTextTypography = withStyles({\r\n  root: {\r\n    color: \"#f53b6a\"\r\n  }\r\n})(Typography);\r\n\r\nconst darkTheme = createTheme({\r\n  palette: {\r\n    type: 'dark',\r\n  },\r\n});\r\n\r\nconst web3 = new Web3(Web3.givenProvider);\r\n// Contract address is provided by Truffle migration\r\nconst ContractInstance = new web3.eth.Contract(ABI, contractAddr);\r\n\r\nconst TokenCard = props => {\r\n  const {\r\n    address,\r\n    name,\r\n    symbol,\r\n    description,\r\n    verified,\r\n    outstanding,\r\n    maxSupply,\r\n    lastPrice,\r\n    creatorTokenId,\r\n    //avatarUrl,\r\n    //imageUrl\r\n  } = props;\r\n\r\n  // Initalize open/closed state for buy dialog\r\n  const [buyOpen, setBuyOpen] = React.useState(false);\r\n  const handleClickBuyOpen = () => {\r\n    setBuyOpen(true);\r\n  };\r\n  const handleBuyClose = () => {\r\n    setBuyOpen(false);\r\n    setAmount('');\r\n  }\r\n\r\n  // Initialze open/closed state for sell dialog\r\n  const [sellOpen, setSellOpen] = React.useState(false);\r\n  const handleClickSellOpen = () => {\r\n    setSellOpen(true);\r\n  }\r\n  const handleSellClose = () => {\r\n    setSellOpen(false);\r\n    setAmount('');\r\n  }\r\n\r\n  // Initialize state for user-specified amount in text field\r\n  const [amount, setAmount] = React.useState('');\r\n  // Initialize state for transaction proceeds required\r\n  const [transactionProceeds, setTransactionProceeds] = React.useState(0);\r\n\r\n  const handleTransactionAmount = (amt) => {\r\n    amt = Math.round(amt);\r\n    if (amt == 0) {\r\n      setAmount('');\r\n    }\r\n    else {\r\n      setAmount(amt);\r\n    }\r\n  }\r\n\r\n  async function getBuyProceeds(creatorTokenId) {\r\n    const buyProceeds = await ContractInstance.methods._totalProceeds(creatorTokenId, 500).call();\r\n    return(buyProceeds);\r\n  }\r\n\r\n  const [buyProceeds, setBuyProceeds] = React.useState(0);\r\n\r\n  const handlePreBuyAmount = async(amt) => {\r\n    handleTransactionAmount(amt);\r\n    setBuyProceeds(getBuyProceeds(creatorTokenId));\r\n  }\r\n\r\n  // Invoke buyCreatorToken\r\n  async function handleBuyCreatorToken(e, creatorTokenId) {\r\n    e.preventDefault();    \r\n    const accounts = await window.ethereum.enable();\r\n    const account = accounts[0];\r\n    const proceeds = await ContractInstance.methods._totalProceeds(creatorTokenId, amount).call({\r\n      from: account,\r\n    });\r\n    const gas = await ContractInstance.methods.buyCreatorToken(creatorTokenId, amount).estimateGas({\r\n      from: account,\r\n      value: proceeds\r\n    });\r\n    const result = await ContractInstance.methods.buyCreatorToken(creatorTokenId, amount).send({\r\n      from: account,\r\n      gas: gas,\r\n      value: proceeds\r\n    })\r\n    console.log(result);\r\n    handleBuyClose();\r\n  }\r\n\r\n  // Invoke sellCreatorToken\r\n  async function handleSellCreatorToken(e, creatorTokenId) {\r\n    e.preventDefault();    \r\n    const accounts = await window.ethereum.enable();\r\n    const account = accounts[0];\r\n    const gas = await ContractInstance.methods.sellCreatorToken(creatorTokenId, amount, account).estimateGas({\r\n      from: account,\r\n    });\r\n    const result = await ContractInstance.methods.sellCreatorToken(creatorTokenId, amount, account).send({\r\n      from: account\r\n    })\r\n    console.log(result);\r\n    handleSellClose();\r\n  }\r\n\r\n    return (\r\n      <ThemeProvider theme={darkTheme}>\r\n        <Card>\r\n          <CardHeader\r\n            //avatar={<Avatar src={avatarUrl} />}\r\n            title={name}\r\n            action={verified? <IconButton aria-label=\"settings\"><CheckCircleIcon /></IconButton> : null}\r\n            subheader={\"$\"+symbol}\r\n          />\r\n          {/*<CardMedia style={{ height: \"150px\" }} image={imageUrl} />*/}\r\n          <CardContent>\r\n            <Typography variant=\"body2\" component=\"p\">\r\n              {\"Last Price: \"+(lastPrice/1000000000000000000).toFixed(6)+\" ETH\"}<br />\r\n              {\"Tokens Outstanding: \"+outstanding}<br />\r\n              {description}\r\n            </Typography>\r\n          </CardContent>\r\n          <CardActions>\r\n            <div>\r\n              <Button variant=\"outlined\" onClick={handleClickBuyOpen} fullWidth=\"true\">\r\n                <BuyTextTypography>\r\n                  Buy\r\n                </BuyTextTypography>\r\n              </Button>\r\n              <Dialog open={buyOpen} onClose={handleBuyClose} aria-labelledby=\"form-dialog-title\">\r\n                <DialogTitle id=\"form-dialog-title\">Buy Token</DialogTitle>\r\n                <DialogContent>\r\n                  <DialogContentText>\r\n                    How many tokens do you wish to purchase?<br></br>\r\n                    (Note: Must be a whole number of tokens)\r\n                  </DialogContentText>\r\n                  <TextField\r\n                    autoFocus\r\n                    margin=\"dense\"\r\n                    id=\"name\"\r\n                    label=\"Quantity\"\r\n                    placeholder=\"100\"\r\n                    type=\"number\"\r\n                    fullWidth\r\n                    value={amount}\r\n                    onChange={(event) => {handlePreBuyAmount(event.target.value)}}\r\n                  />\r\n                <DialogContentText>\r\n                  Total Transaction Value: <br></br>\r\n                  Price per Token: \r\n                </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                  <Button onClick={handleBuyClose} color=\"primary\">\r\n                    Cancel\r\n                  </Button>\r\n                  <Button\r\n                  value={creatorTokenId}\r\n                  onClick={(e) => handleBuyCreatorToken(e, creatorTokenId)}\r\n                  color=\"primary\"\r\n                  disabled={amount==''}>\r\n                    Complete Transaction\r\n                  </Button>\r\n                </DialogActions>\r\n              </Dialog>\r\n            </div>\r\n            <div>\r\n              <Button variant=\"outlined\" color=\"secondary\" onClick={handleClickSellOpen} fullWidth=\"true\">\r\n                <SellTextTypography>\r\n                  Sell\r\n                </SellTextTypography>\r\n              </Button>\r\n              <Dialog open={sellOpen} onClose={handleSellClose} aria-labelledby=\"form-dialog-title\">\r\n                <DialogTitle id=\"form-dialog-title\">Sell Token</DialogTitle>\r\n                <DialogContent>\r\n                  <DialogContentText>\r\n                    How many tokens do you wish to sell?<br></br>\r\n                    (Note: Must be a whole number of tokens)\r\n                  </DialogContentText>\r\n                  <TextField\r\n                    autoFocus\r\n                    margin=\"dense\"\r\n                    id=\"name\"\r\n                    label=\"Quantity\"\r\n                    placeholder=\"100\"\r\n                    type=\"number\"\r\n                    fullWidth\r\n                    value={amount}\r\n                    onChange={(event) => {handleTransactionAmount(event.target.value)}}\r\n                  />\r\n                <DialogContentText>\r\n                  Total Transaction Value: <br></br>\r\n                  Price per Token: \r\n                </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                  <Button onClick={handleSellClose} color=\"primary\">\r\n                    Cancel\r\n                  </Button>\r\n                  <Button\r\n                  value={creatorTokenId}\r\n                  onClick={(e) => handleSellCreatorToken(e, creatorTokenId)}\r\n                  color=\"primary\"\r\n                  disabled={amount==''}>\r\n                    Complete Transaction\r\n                  </Button>\r\n                </DialogActions>\r\n              </Dialog>\r\n            </div>\r\n          </CardActions>\r\n        </Card>\r\n      </ThemeProvider>\r\n    );\r\n};\r\n\r\nexport default TokenCard;\r\n"]},"metadata":{},"sourceType":"module"}