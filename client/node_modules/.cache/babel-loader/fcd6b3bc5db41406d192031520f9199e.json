{"ast":null,"code":"import React from \"react\"; // These imports are needed to implement Web3, and to connect the React client to the Ethereum server\n\nimport Web3 from './web3';\nimport { ABI } from './ABI';\nimport { contractAddr } from './Address';\nconst web3 = new Web3(Web3.givenProvider); // Contract address is provided by Truffle migration\n\nconst ContractInstance = new web3.eth.Contract(ABI, contractAddr);\n\nconst UserHoldings = () => {\n  // Initialize empty array of Creator Tokens\n  let userHoldings = [];\n\n  async function handleCreatorTokenCount() {\n    const creatorTokenCount = await ContractInstance.methods.getCreatorTokenCount().call();\n    console.log(creatorTokenCount);\n    return creatorTokenCount;\n  }\n\n  async function handleUserHoldingMapping(qty) {\n    const accounts = await window.ethereum.enable();\n    const account = accounts[0];\n\n    for (let i = 0; i < qty; i++) {\n      const holdings = await ContractInstance.methods.userToHoldings(account, i).call();\n      userHoldings.push(holdings);\n    }\n\n    console.log(userHoldings);\n  }\n\n  async function handleUserHoldings() {\n    await handleUserHoldingMapping(await handleCreatorTokenCount());\n  }\n\n  handleUserHoldings();\n  return null;\n};\n\nexport default UserHoldings;","map":{"version":3,"sources":["/Users/kamilalizaisadik/DeFi/Dynamic Automated Market Maker/CreatorTokenExchange/client/src/UserHoldings.jsx"],"names":["React","Web3","ABI","contractAddr","web3","givenProvider","ContractInstance","eth","Contract","UserHoldings","userHoldings","handleCreatorTokenCount","creatorTokenCount","methods","getCreatorTokenCount","call","console","log","handleUserHoldingMapping","qty","accounts","window","ethereum","enable","account","i","holdings","userToHoldings","push","handleUserHoldings"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,SAASC,GAAT,QAAoB,OAApB;AACA,SAASC,YAAT,QAA6B,WAA7B;AAEA,MAAMC,IAAI,GAAG,IAAIH,IAAJ,CAASA,IAAI,CAACI,aAAd,CAAb,C,CACA;;AACA,MAAMC,gBAAgB,GAAG,IAAIF,IAAI,CAACG,GAAL,CAASC,QAAb,CAAsBN,GAAtB,EAA2BC,YAA3B,CAAzB;;AAEA,MAAMM,YAAY,GAAG,MAAM;AAE1B;AACA,MAAIC,YAAY,GAAG,EAAnB;;AAEA,iBAAeC,uBAAf,GAAyC;AACxC,UAAMC,iBAAiB,GAAG,MAAMN,gBAAgB,CAACO,OAAjB,CAAyBC,oBAAzB,GAAgDC,IAAhD,EAAhC;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYL,iBAAZ;AACA,WAAOA,iBAAP;AACA;;AAED,iBAAeM,wBAAf,CAAwCC,GAAxC,EAA6C;AAC5C,UAAMC,QAAQ,GAAG,MAAMC,MAAM,CAACC,QAAP,CAAgBC,MAAhB,EAAvB;AACA,UAAMC,OAAO,GAAGJ,QAAQ,CAAC,CAAD,CAAxB;;AACA,SAAK,IAAIK,CAAC,GAAC,CAAX,EAAcA,CAAC,GAACN,GAAhB,EAAqBM,CAAC,EAAtB,EAA0B;AACzB,YAAMC,QAAQ,GAAG,MAAMpB,gBAAgB,CAACO,OAAjB,CAAyBc,cAAzB,CAAwCH,OAAxC,EAAiDC,CAAjD,EAAoDV,IAApD,EAAvB;AACAL,MAAAA,YAAY,CAACkB,IAAb,CAAkBF,QAAlB;AACA;;AACDV,IAAAA,OAAO,CAACC,GAAR,CAAYP,YAAZ;AACA;;AAED,iBAAemB,kBAAf,GAAmC;AAClC,UAAMX,wBAAwB,CAAC,MAAMP,uBAAuB,EAA9B,CAA9B;AACA;;AAEDkB,EAAAA,kBAAkB;AAElB,SACC,IADD;AAIA,CA/BD;;AAiCA,eAAepB,YAAf","sourcesContent":["import React from \"react\";\n// These imports are needed to implement Web3, and to connect the React client to the Ethereum server\nimport Web3 from './web3';\nimport { ABI } from './ABI';\nimport { contractAddr } from './Address';\n\nconst web3 = new Web3(Web3.givenProvider);\n// Contract address is provided by Truffle migration\nconst ContractInstance = new web3.eth.Contract(ABI, contractAddr);\n\nconst UserHoldings = () => {\n\n\t// Initialize empty array of Creator Tokens\n\tlet userHoldings = [];\n\n\tasync function handleCreatorTokenCount() {\n\t\tconst creatorTokenCount = await ContractInstance.methods.getCreatorTokenCount().call();\n\t\tconsole.log(creatorTokenCount);\n\t\treturn(creatorTokenCount)\n\t}\n\n\tasync function handleUserHoldingMapping(qty) {\n\t\tconst accounts = await window.ethereum.enable();\n\t\tconst account = accounts[0];\n\t\tfor (let i=0; i<qty; i++) {\n\t\t\tconst holdings = await ContractInstance.methods.userToHoldings(account, i).call();\n\t\t\tuserHoldings.push(holdings);\n\t\t}\n\t\tconsole.log(userHoldings);\n\t}\n\n\tasync function handleUserHoldings(){\n\t\tawait handleUserHoldingMapping(await handleCreatorTokenCount());\n\t}\n\n\thandleUserHoldings();\n\n\treturn (\n\t\tnull\n\t);\n\n};\n\nexport default UserHoldings;"]},"metadata":{},"sourceType":"module"}