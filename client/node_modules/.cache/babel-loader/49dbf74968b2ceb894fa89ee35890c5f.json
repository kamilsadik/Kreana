{"ast":null,"code":"var _jsxFileName = \"/Users/kamilalizaisadik/DeFi/Dynamic Automated Market Maker/CreatorTokenExchange/client/src/TokenCard.jsx\";\nimport React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport ShareIcon from \"@material-ui/icons/Share\";\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport { Avatar, IconButton, CardMedia } from \"@material-ui/core\"; // These imports are needed to implement Web3, and to connect the React client to the Ethereum server\n\nimport Web3 from './web3';\nimport { ABI } from './ABI';\nimport { contractAddr } from './Address'; // These imports are needed for the Dialog\n\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { createTheme, ThemeProvider } from '@material-ui/core/styles';\nconst useStyles = makeStyles(() => ({\n  palette: {\n    primary: {\n      light: '#757ce8',\n      main: '#3f50b5',\n      dark: '#002884',\n      contrastText: '#fff'\n    },\n    secondary: {\n      light: '#ff7961',\n      main: '#f44336',\n      dark: '#ba000d',\n      contrastText: '#000'\n    },\n    buy: {\n      light: \"#46d182\",\n      main: \"#46d182\",\n      dark: \"#46d182\",\n      contrastText: \"#46d182\"\n    },\n    sell: {\n      light: \"#f53b6a\",\n      main: \"#f53b6a\",\n      dark: \"#f53b6a\",\n      contrastText: \"#f53b6a\"\n    }\n  }\n}));\nconst darkTheme = createTheme({\n  palette: {\n    type: 'dark'\n  }\n});\nconst web3 = new Web3(Web3.givenProvider); // Contract address is provided by Truffle migration\n\nconst ContractInstance = new web3.eth.Contract(ABI, contractAddr);\n\nconst TokenCard = props => {\n  const {\n    address,\n    name,\n    symbol,\n    description,\n    verified,\n    outstanding,\n    maxSupply,\n    tokenId,\n    avatarUrl,\n    imageUrl\n  } = props; // Initalize open/closed state for buy dialog\n\n  const [buyOpen, setBuyOpen] = React.useState(false);\n\n  const handleClickBuyOpen = () => {\n    setBuyOpen(true);\n  };\n\n  const handleBuyClose = () => {\n    setBuyOpen(false);\n    setAmount('');\n  }; // Initialze open/closed state for sell dialog\n\n\n  const [sellOpen, setSellOpen] = React.useState(false);\n\n  const handleClickSellOpen = () => {\n    setSellOpen(true);\n  };\n\n  const handleSellClose = () => {\n    setSellOpen(false);\n    setAmount('');\n  }; // Initialize state for user-specified amount in text field\n\n\n  const [amount, setAmount] = React.useState(''); // Initialize state for transaction proceeds required\n\n  const [transactionProceeds, setTransactionProceeds] = React.useState(0);\n\n  const handleTransactionAmount = amt => {\n    amt = Math.round(amt);\n\n    if (amt == 0) {\n      setAmount('');\n    } else {\n      setAmount(amt);\n    }\n  }; // Invoke buyCreatorToken\n\n\n  async function handleBuyCreatorToken(e, tokenId) {\n    e.preventDefault();\n    const accounts = await window.ethereum.enable();\n    const account = accounts[0];\n    const proceeds = await ContractInstance.methods._totalProceeds(tokenId, amount).call({\n      from: account\n    });\n    const gas = await ContractInstance.methods.buyCreatorToken(tokenId, amount).estimateGas({\n      from: account,\n      value: proceeds\n    });\n    const result = await ContractInstance.methods.buyCreatorToken(tokenId, amount).send({\n      from: account,\n      gas: gas,\n      value: proceeds\n    });\n    console.log(result);\n    handleBuyClose();\n  } // Invoke sellCreatorToken\n\n\n  async function handleSellCreatorToken(e, tokenId) {\n    e.preventDefault();\n    const accounts = await window.ethereum.enable();\n    const account = accounts[0];\n    const gas = await ContractInstance.methods.sellCreatorToken(tokenId, amount, account).estimateGas({\n      from: account\n    });\n    const result = await ContractInstance.methods.sellCreatorToken(tokenId, amount, account).send({\n      from: account\n    });\n    console.log(result);\n    handleSellClose();\n  }\n\n  return /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    avatar: /*#__PURE__*/React.createElement(Avatar, {\n      src: avatarUrl,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 21\n      }\n    }),\n    title: name,\n    action: verified ? /*#__PURE__*/React.createElement(IconButton, {\n      \"aria-label\": \"settings\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(CheckCircleIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 65\n      }\n    })) : null,\n    subheader: \"$\" + symbol,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(CardMedia, {\n    style: {\n      height: \"150px\"\n    },\n    image: imageUrl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body2\",\n    component: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 13\n    }\n  }, description)), /*#__PURE__*/React.createElement(CardActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"outlined\",\n    color: \"buy\",\n    onClick: handleClickBuyOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 15\n    }\n  }, \"Buy\"), /*#__PURE__*/React.createElement(Dialog, {\n    open: buyOpen,\n    onClose: handleBuyClose,\n    \"aria-labelledby\": \"form-dialog-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(DialogTitle, {\n    id: \"form-dialog-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 17\n    }\n  }, \"Buy Token\"), /*#__PURE__*/React.createElement(DialogContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(DialogContentText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 19\n    }\n  }, \"How many tokens do you wish to purchase?\", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 61\n    }\n  }), \"(Note: Must be a whole number of tokens)\"), /*#__PURE__*/React.createElement(TextField, {\n    autoFocus: true,\n    margin: \"dense\",\n    id: \"name\",\n    label: \"Quantity\",\n    placeholder: \"100\",\n    type: \"number\",\n    fullWidth: true,\n    value: amount,\n    onChange: event => {\n      handleTransactionAmount(event.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(DialogContentText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 17\n    }\n  }, \"Total Transaction Value: \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 44\n    }\n  }), \"Price per Token:\")), /*#__PURE__*/React.createElement(DialogActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: handleBuyClose,\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 19\n    }\n  }, \"Cancel\"), /*#__PURE__*/React.createElement(Button, {\n    value: tokenId,\n    onClick: e => handleBuyCreatorToken(e, tokenId),\n    color: \"primary\",\n    disabled: amount == '',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 19\n    }\n  }, \"Complete Transaction\")))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"outlined\",\n    color: \"primary\",\n    onClick: handleClickSellOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 15\n    }\n  }, \"Sell\"), /*#__PURE__*/React.createElement(Dialog, {\n    open: sellOpen,\n    onClose: handleSellClose,\n    \"aria-labelledby\": \"form-dialog-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(DialogTitle, {\n    id: \"form-dialog-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 17\n    }\n  }, \"Sell Token\"), /*#__PURE__*/React.createElement(DialogContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(DialogContentText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 19\n    }\n  }, \"How many tokens do you wish to sell?\", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 57\n    }\n  }), \"(Note: Must be a whole number of tokens)\"), /*#__PURE__*/React.createElement(TextField, {\n    autoFocus: true,\n    margin: \"dense\",\n    id: \"name\",\n    label: \"Quantity\",\n    placeholder: \"100\",\n    type: \"number\",\n    fullWidth: true,\n    value: amount,\n    onChange: event => {\n      handleTransactionAmount(event.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(DialogContentText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 17\n    }\n  }, \"Total Transaction Value: \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 44\n    }\n  }), \"Price per Token:\")), /*#__PURE__*/React.createElement(DialogActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: handleSellClose,\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 19\n    }\n  }, \"Cancel\"), /*#__PURE__*/React.createElement(Button, {\n    value: tokenId,\n    onClick: e => handleSellCreatorToken(e, tokenId),\n    color: \"primary\",\n    disabled: amount == '',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 19\n    }\n  }, \"Complete Transaction\"))))));\n};\n\nexport default TokenCard;","map":{"version":3,"sources":["/Users/kamilalizaisadik/DeFi/Dynamic Automated Market Maker/CreatorTokenExchange/client/src/TokenCard.jsx"],"names":["React","makeStyles","Card","CardHeader","CardActions","CardContent","Typography","Button","ShareIcon","CheckCircleIcon","Avatar","IconButton","CardMedia","Web3","ABI","contractAddr","TextField","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","createTheme","ThemeProvider","useStyles","palette","primary","light","main","dark","contrastText","secondary","buy","sell","darkTheme","type","web3","givenProvider","ContractInstance","eth","Contract","TokenCard","props","address","name","symbol","description","verified","outstanding","maxSupply","tokenId","avatarUrl","imageUrl","buyOpen","setBuyOpen","useState","handleClickBuyOpen","handleBuyClose","setAmount","sellOpen","setSellOpen","handleClickSellOpen","handleSellClose","amount","transactionProceeds","setTransactionProceeds","handleTransactionAmount","amt","Math","round","handleBuyCreatorToken","e","preventDefault","accounts","window","ethereum","enable","account","proceeds","methods","_totalProceeds","call","from","gas","buyCreatorToken","estimateGas","value","result","send","console","log","handleSellCreatorToken","sellCreatorToken","height","event","target"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport ShareIcon from \"@material-ui/icons/Share\";\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\r\nimport { Avatar, IconButton, CardMedia } from \"@material-ui/core\";\r\n// These imports are needed to implement Web3, and to connect the React client to the Ethereum server\r\nimport Web3 from './web3';\r\nimport { ABI } from './ABI';\r\nimport { contractAddr } from './Address';\r\n// These imports are needed for the Dialog\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport { createTheme, ThemeProvider } from '@material-ui/core/styles';\r\n\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    palette: {\r\n      primary: {\r\n        light: '#757ce8',\r\n        main: '#3f50b5',\r\n        dark: '#002884',\r\n        contrastText: '#fff',\r\n      },\r\n      secondary: {\r\n        light: '#ff7961',\r\n        main: '#f44336',\r\n        dark: '#ba000d',\r\n        contrastText: '#000',\r\n      },\r\n      buy: {\r\n        light: \"#46d182\",\r\n        main: \"#46d182\",\r\n        dark: \"#46d182\",\r\n        contrastText: \"#46d182\",\r\n      },\r\n      sell: {\r\n        light: \"#f53b6a\",\r\n        main: \"#f53b6a\",\r\n        dark: \"#f53b6a\",\r\n        contrastText: \"#f53b6a\",\r\n      }\r\n    },\r\n  }));\r\n\r\nconst darkTheme = createTheme({\r\n  palette: {\r\n    type: 'dark',\r\n  },\r\n});\r\n\r\nconst web3 = new Web3(Web3.givenProvider);\r\n// Contract address is provided by Truffle migration\r\nconst ContractInstance = new web3.eth.Contract(ABI, contractAddr);\r\n\r\nconst TokenCard = props => {\r\n  const { address, name, symbol, description, verified, outstanding, maxSupply, tokenId, avatarUrl, imageUrl } = props;\r\n\r\n  // Initalize open/closed state for buy dialog\r\n  const [buyOpen, setBuyOpen] = React.useState(false);\r\n  const handleClickBuyOpen = () => {\r\n    setBuyOpen(true);\r\n  };\r\n  const handleBuyClose = () => {\r\n    setBuyOpen(false);\r\n    setAmount('');\r\n  }\r\n\r\n  // Initialze open/closed state for sell dialog\r\n  const [sellOpen, setSellOpen] = React.useState(false);\r\n  const handleClickSellOpen = () => {\r\n    setSellOpen(true);\r\n  }\r\n  const handleSellClose = () => {\r\n    setSellOpen(false);\r\n    setAmount('');\r\n  }\r\n\r\n  // Initialize state for user-specified amount in text field\r\n  const [amount, setAmount] = React.useState('');\r\n  // Initialize state for transaction proceeds required\r\n  const [transactionProceeds, setTransactionProceeds] = React.useState(0);\r\n\r\n  const handleTransactionAmount = (amt) => {\r\n    amt = Math.round(amt);\r\n    if (amt == 0) {\r\n      setAmount('');\r\n    }\r\n    else {\r\n      setAmount(amt);\r\n    }\r\n  }\r\n\r\n  // Invoke buyCreatorToken\r\n  async function handleBuyCreatorToken(e, tokenId) {\r\n    e.preventDefault();    \r\n    const accounts = await window.ethereum.enable();\r\n    const account = accounts[0];\r\n    const proceeds = await ContractInstance.methods._totalProceeds(tokenId, amount).call({\r\n      from: account,\r\n    });\r\n    const gas = await ContractInstance.methods.buyCreatorToken(tokenId, amount).estimateGas({\r\n      from: account,\r\n      value: proceeds\r\n    });\r\n    const result = await ContractInstance.methods.buyCreatorToken(tokenId, amount).send({\r\n      from: account,\r\n      gas: gas,\r\n      value: proceeds\r\n    })\r\n    console.log(result);\r\n    handleBuyClose();\r\n  }\r\n\r\n  // Invoke sellCreatorToken\r\n  async function handleSellCreatorToken(e, tokenId) {\r\n    e.preventDefault();    \r\n    const accounts = await window.ethereum.enable();\r\n    const account = accounts[0];\r\n    const gas = await ContractInstance.methods.sellCreatorToken(tokenId, amount, account).estimateGas({\r\n      from: account,\r\n    });\r\n    const result = await ContractInstance.methods.sellCreatorToken(tokenId, amount, account).send({\r\n      from: account\r\n    })\r\n    console.log(result);\r\n    handleSellClose();\r\n  }\r\n\r\n    return (\r\n        <Card>\r\n          <CardHeader\r\n            avatar={<Avatar src={avatarUrl} />}\r\n            title={name}\r\n            action={verified? <IconButton aria-label=\"settings\"><CheckCircleIcon /></IconButton> : null}\r\n            subheader={\"$\"+symbol}\r\n          />\r\n          <CardMedia style={{ height: \"150px\" }} image={imageUrl} />\r\n          <CardContent>\r\n            <Typography variant=\"body2\" component=\"p\">\r\n              {description}\r\n            </Typography>\r\n          </CardContent>\r\n          <CardActions>\r\n            <div>\r\n              <Button variant=\"outlined\" color=\"buy\" onClick={handleClickBuyOpen}>\r\n                Buy\r\n              </Button>\r\n              <Dialog open={buyOpen} onClose={handleBuyClose} aria-labelledby=\"form-dialog-title\">\r\n                <DialogTitle id=\"form-dialog-title\">Buy Token</DialogTitle>\r\n                <DialogContent>\r\n                  <DialogContentText>\r\n                    How many tokens do you wish to purchase?<br></br>\r\n                    (Note: Must be a whole number of tokens)\r\n                  </DialogContentText>\r\n                  <TextField\r\n                    autoFocus\r\n                    margin=\"dense\"\r\n                    id=\"name\"\r\n                    label=\"Quantity\"\r\n                    placeholder=\"100\"\r\n                    type=\"number\"\r\n                    fullWidth\r\n                    value={amount}\r\n                    onChange={(event) => {handleTransactionAmount(event.target.value)}}\r\n                  />\r\n                <DialogContentText>\r\n                  Total Transaction Value: <br></br>\r\n                  Price per Token: \r\n                </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                  <Button onClick={handleBuyClose} color=\"primary\">\r\n                    Cancel\r\n                  </Button>\r\n                  <Button\r\n                  value={tokenId}\r\n                  onClick={(e) => handleBuyCreatorToken(e, tokenId)}\r\n                  color=\"primary\"\r\n                  disabled={amount==''}>\r\n                    Complete Transaction\r\n                  </Button>\r\n                </DialogActions>\r\n              </Dialog>\r\n            </div>\r\n            <div>\r\n              <Button variant=\"outlined\" color=\"primary\" onClick={handleClickSellOpen}>\r\n                Sell\r\n              </Button>\r\n              <Dialog open={sellOpen} onClose={handleSellClose} aria-labelledby=\"form-dialog-title\">\r\n                <DialogTitle id=\"form-dialog-title\">Sell Token</DialogTitle>\r\n                <DialogContent>\r\n                  <DialogContentText>\r\n                    How many tokens do you wish to sell?<br></br>\r\n                    (Note: Must be a whole number of tokens)\r\n                  </DialogContentText>\r\n                  <TextField\r\n                    autoFocus\r\n                    margin=\"dense\"\r\n                    id=\"name\"\r\n                    label=\"Quantity\"\r\n                    placeholder=\"100\"\r\n                    type=\"number\"\r\n                    fullWidth\r\n                    value={amount}\r\n                    onChange={(event) => {handleTransactionAmount(event.target.value)}}\r\n                  />\r\n                <DialogContentText>\r\n                  Total Transaction Value: <br></br>\r\n                  Price per Token: \r\n                </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                  <Button onClick={handleSellClose} color=\"primary\">\r\n                    Cancel\r\n                  </Button>\r\n                  <Button\r\n                  value={tokenId}\r\n                  onClick={(e) => handleSellCreatorToken(e, tokenId)}\r\n                  color=\"primary\"\r\n                  disabled={amount==''}>\r\n                    Complete Transaction\r\n                  </Button>\r\n                </DialogActions>\r\n              </Dialog>\r\n            </div>\r\n          </CardActions>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default TokenCard;\r\n"]},"metadata":{},"sourceType":"module"}