{"ast":null,"code":"import React from \"react\"; // These imports are needed to implement Web3, and to connect the React client to the Ethereum server\n\nimport Web3 from './web3';\nimport { ABI } from './ABI';\nimport { contractAddr } from './Address';\nconst web3 = new Web3(Web3.givenProvider); // Contract address is provided by Truffle migration\n\nconst ContractInstance = new web3.eth.Contract(ABI, contractAddr); // Initialize empty array of Creator Tokens\n\nlet tokens = ['hello'];\n\nconst Inventory = () => {\n  function handleCreatorTokenCount() {\n    const creatorTokenCount = ContractInstance.methods.getCreatorTokenCount().call();\n    console.log(creatorTokenCount);\n    return creatorTokenCount;\n  }\n\n  function handleCreatorTokenArray(qty) {\n    for (let i = 0; i < qty; i++) {\n      const token = ContractInstance.methods.creatorTokens(i).call();\n      tokens.push(token);\n    }\n\n    console.log(tokens);\n  }\n\n  function handleCreatorTokens() {\n    handleCreatorTokenArray(handleCreatorTokenCount());\n  }\n\n  handleCreatorTokens();\n  return null //handleCreatorTokens()\n  ;\n};\n\nexport default Inventory;\nexport { tokens };","map":{"version":3,"sources":["/Users/kamilalizaisadik/DeFi/Dynamic Automated Market Maker/CreatorTokenExchange/client/src/Inventory.jsx"],"names":["React","Web3","ABI","contractAddr","web3","givenProvider","ContractInstance","eth","Contract","tokens","Inventory","handleCreatorTokenCount","creatorTokenCount","methods","getCreatorTokenCount","call","console","log","handleCreatorTokenArray","qty","i","token","creatorTokens","push","handleCreatorTokens"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,SAASC,GAAT,QAAoB,OAApB;AACA,SAASC,YAAT,QAA6B,WAA7B;AAEA,MAAMC,IAAI,GAAG,IAAIH,IAAJ,CAASA,IAAI,CAACI,aAAd,CAAb,C,CACA;;AACA,MAAMC,gBAAgB,GAAG,IAAIF,IAAI,CAACG,GAAL,CAASC,QAAb,CAAsBN,GAAtB,EAA2BC,YAA3B,CAAzB,C,CAEA;;AACA,IAAIM,MAAM,GAAG,CAAC,OAAD,CAAb;;AAEA,MAAMC,SAAS,GAAG,MAAM;AAEvB,WAASC,uBAAT,GAAmC;AAClC,UAAMC,iBAAiB,GAAGN,gBAAgB,CAACO,OAAjB,CAAyBC,oBAAzB,GAAgDC,IAAhD,EAA1B;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYL,iBAAZ;AACA,WAAOA,iBAAP;AACA;;AAED,WAASM,uBAAT,CAAiCC,GAAjC,EAAsC;AACrC,SAAK,IAAIC,CAAC,GAAC,CAAX,EAAcA,CAAC,GAACD,GAAhB,EAAqBC,CAAC,EAAtB,EAA0B;AACzB,YAAMC,KAAK,GAAGf,gBAAgB,CAACO,OAAjB,CAAyBS,aAAzB,CAAuCF,CAAvC,EAA0CL,IAA1C,EAAd;AACAN,MAAAA,MAAM,CAACc,IAAP,CAAYF,KAAZ;AACA;;AACDL,IAAAA,OAAO,CAACC,GAAR,CAAYR,MAAZ;AACA;;AAED,WAASe,mBAAT,GAA8B;AAC7BN,IAAAA,uBAAuB,CAACP,uBAAuB,EAAxB,CAAvB;AACA;;AAEDa,EAAAA,mBAAmB;AAEnB,SACC,IADD,CAEC;AAFD;AAKA,CA3BD;;AA6BA,eAAed,SAAf;AACA,SAASD,MAAT","sourcesContent":["import React from \"react\";\n// These imports are needed to implement Web3, and to connect the React client to the Ethereum server\nimport Web3 from './web3';\nimport { ABI } from './ABI';\nimport { contractAddr } from './Address';\n\nconst web3 = new Web3(Web3.givenProvider);\n// Contract address is provided by Truffle migration\nconst ContractInstance = new web3.eth.Contract(ABI, contractAddr);\n\n// Initialize empty array of Creator Tokens\nlet tokens = ['hello'];\n\nconst Inventory = () => {\n\n\tfunction handleCreatorTokenCount() {\n\t\tconst creatorTokenCount = ContractInstance.methods.getCreatorTokenCount().call();\n\t\tconsole.log(creatorTokenCount);\n\t\treturn(creatorTokenCount)\n\t}\n\n\tfunction handleCreatorTokenArray(qty) {\n\t\tfor (let i=0; i<qty; i++) {\n\t\t\tconst token = ContractInstance.methods.creatorTokens(i).call();\n\t\t\ttokens.push(token);\n\t\t}\n\t\tconsole.log(tokens);\n\t}\n\n\tfunction handleCreatorTokens(){\n\t\thandleCreatorTokenArray(handleCreatorTokenCount());\n\t}\n\n\thandleCreatorTokens();\n\n\treturn (\n\t\tnull\n\t\t//handleCreatorTokens()\n\t);\n\n};\n\nexport default Inventory;\nexport { tokens };"]},"metadata":{},"sourceType":"module"}