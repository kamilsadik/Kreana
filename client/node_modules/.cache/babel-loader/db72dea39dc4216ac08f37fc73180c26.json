{"ast":null,"code":"var _jsxFileName = \"/Users/kamilalizaisadik/DeFi/Dynamic Automated Market Maker/CreatorTokenExchange/client/src/NewTokenForm.js\";\nimport React from \"react\";\nimport { FormControl, InputLabel, FormLabel, FormHelperText, Input } from '@material-ui/core'; // These imports are needed to implement Web3, and to connect the React client to the Ethereum server\n\nimport Web3 from './web3';\nimport { ABI } from './ABI';\nimport { contractAddr } from './Address';\nconst web3 = new Web3(Web3.givenProvider); // Contract address is provided by Truffle migration\n\nconst ContractInstance = new web3.eth.Contract(ABI, contractAddr);\n\nconst NewTokenForm = () => {\n  // Initialize state for array of Creator Tokens\n  const arr = [];\n  const creatorTokenCount = ContractInstance.methods.getCreatorTokenCount();\n\n  for (let i = 0; i < creatorTokenCount; i++) {\n    const item = ContractInstance.methods.creatorTokens(i);\n    console.log(`publicData[${i}] = ${item}`);\n    arr.push(item);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 4\n    }\n  }, arr.map(item => /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 24\n    }\n  }, item.name))); //(\n  //\t'hello',\n  //\tarr,\n  //\t'goodbye'\n  //  (e) => handleCreatorTokens(e)\n  //);\n};\n\nexport default NewTokenForm;","map":{"version":3,"sources":["/Users/kamilalizaisadik/DeFi/Dynamic Automated Market Maker/CreatorTokenExchange/client/src/NewTokenForm.js"],"names":["React","FormControl","InputLabel","FormLabel","FormHelperText","Input","Web3","ABI","contractAddr","web3","givenProvider","ContractInstance","eth","Contract","NewTokenForm","arr","creatorTokenCount","methods","getCreatorTokenCount","i","item","creatorTokens","console","log","push","map","name"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,UAAtB,EAAkCC,SAAlC,EAA6CC,cAA7C,EAA6DC,KAA7D,QAA0E,mBAA1E,C,CACA;;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,SAASC,GAAT,QAAoB,OAApB;AACA,SAASC,YAAT,QAA6B,WAA7B;AAEA,MAAMC,IAAI,GAAG,IAAIH,IAAJ,CAASA,IAAI,CAACI,aAAd,CAAb,C,CACA;;AACA,MAAMC,gBAAgB,GAAG,IAAIF,IAAI,CAACG,GAAL,CAASC,QAAb,CAAsBN,GAAtB,EAA2BC,YAA3B,CAAzB;;AAEA,MAAMM,YAAY,GAAG,MAAM;AAE1B;AACA,QAAMC,GAAG,GAAG,EAAZ;AAEA,QAAMC,iBAAiB,GAAGL,gBAAgB,CAACM,OAAjB,CAAyBC,oBAAzB,EAA1B;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,iBAApB,EAAuCG,CAAC,EAAxC,EAA4C;AAC3C,UAAMC,IAAI,GAAGT,gBAAgB,CAACM,OAAjB,CAAyBI,aAAzB,CAAuCF,CAAvC,CAAb;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAa,cAAaJ,CAAE,OAAMC,IAAK,EAAvC;AACAL,IAAAA,GAAG,CAACS,IAAJ,CAASJ,IAAT;AACA;;AAEA,sBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGL,GAAG,CAACU,GAAJ,CAAQL,IAAI,iBAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIA,IAAI,CAACM,IAAT,CAAjB,CADH,CADD,CAZyB,CAiBzB;AACA;AACA;AACA;AACA;AACA;AACD,CAvBD;;AAyBA,eAAeZ,YAAf","sourcesContent":["import React from \"react\";\nimport { FormControl, InputLabel, FormLabel, FormHelperText, Input } from '@material-ui/core';\n// These imports are needed to implement Web3, and to connect the React client to the Ethereum server\nimport Web3 from './web3';\nimport { ABI } from './ABI';\nimport { contractAddr } from './Address';\n\nconst web3 = new Web3(Web3.givenProvider);\n// Contract address is provided by Truffle migration\nconst ContractInstance = new web3.eth.Contract(ABI, contractAddr);\n\nconst NewTokenForm = () => {\n\n\t// Initialize state for array of Creator Tokens\n\tconst arr = [];\n\n\tconst creatorTokenCount = ContractInstance.methods.getCreatorTokenCount();\n\tfor (let i = 0; i < creatorTokenCount; i++) {\n\t\tconst item = ContractInstance.methods.creatorTokens(i);\n\t\tconsole.log(`publicData[${i}] = ${item}`);\n\t\tarr.push(item);\n\t}\n\n  return (\n  \t<div>\n  \t  {arr.map(item => (<p>{item.name}</p>))}\n  \t</div>\n  );\n  //(\n  //\t'hello',\n  //\tarr,\n  //\t'goodbye'\n  //  (e) => handleCreatorTokens(e)\n  //);\n};\n\nexport default NewTokenForm;"]},"metadata":{},"sourceType":"module"}