{"ast":null,"code":"import React from \"react\"; // These imports are needed to implement Web3, and to connect the React client to the Ethereum server\n\nimport Web3 from './web3';\nimport { ABI } from './ABI';\nimport { contractAddr } from './Address';\nconst web3 = new Web3(Web3.givenProvider); // Contract address is provided by Truffle migration\n\nconst ContractInstance = new web3.eth.Contract(ABI, contractAddr);\nconst accounts = window.ethereum.enable(); //does this need to be async?\n\nconst account = accounts[0];\n\nconst UserHoldings = () => {\n  // Initialize empty array of Creator Tokens\n  let holdings = [];\n\n  async function handleUserHoldings() {\n    const userHoldings = await ContractInstance.methods.userHoldings(account).call();\n    holdings.push(userHoldings);\n    console.log(holdings);\n    return creatorTokenCount;\n  }\n\n  async function handleCreatorTokenArray(qty) {\n    for (let i = 0; i < qty; i++) {\n      const token = await ContractInstance.methods.creatorTokens(i).call();\n      tokens.push(token);\n    }\n\n    console.log(tokens);\n  }\n\n  async function handleCreatorTokens() {\n    await handleCreatorTokenArray(await handleCreatorTokenCount());\n  }\n\n  handleCreatorTokens();\n  return null;\n};\n\nexport default UserHoldings;","map":{"version":3,"sources":["/Users/kamilalizaisadik/DeFi/Dynamic Automated Market Maker/CreatorTokenExchange/client/src/UserHoldings.jsx"],"names":["React","Web3","ABI","contractAddr","web3","givenProvider","ContractInstance","eth","Contract","accounts","window","ethereum","enable","account","UserHoldings","holdings","handleUserHoldings","userHoldings","methods","call","push","console","log","creatorTokenCount","handleCreatorTokenArray","qty","i","token","creatorTokens","tokens","handleCreatorTokens","handleCreatorTokenCount"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,SAASC,GAAT,QAAoB,OAApB;AACA,SAASC,YAAT,QAA6B,WAA7B;AAEA,MAAMC,IAAI,GAAG,IAAIH,IAAJ,CAASA,IAAI,CAACI,aAAd,CAAb,C,CACA;;AACA,MAAMC,gBAAgB,GAAG,IAAIF,IAAI,CAACG,GAAL,CAASC,QAAb,CAAsBN,GAAtB,EAA2BC,YAA3B,CAAzB;AACA,MAAMM,QAAQ,GAAGC,MAAM,CAACC,QAAP,CAAgBC,MAAhB,EAAjB,C,CAA2C;;AAC3C,MAAMC,OAAO,GAAGJ,QAAQ,CAAC,CAAD,CAAxB;;AAEA,MAAMK,YAAY,GAAG,MAAM;AAE1B;AACA,MAAIC,QAAQ,GAAG,EAAf;;AAEA,iBAAeC,kBAAf,GAAoC;AACnC,UAAMC,YAAY,GAAG,MAAMX,gBAAgB,CAACY,OAAjB,CAAyBD,YAAzB,CAAsCJ,OAAtC,EAA+CM,IAA/C,EAA3B;AACAJ,IAAAA,QAAQ,CAACK,IAAT,CAAcH,YAAd;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAYP,QAAZ;AACA,WAAOQ,iBAAP;AACA;;AAED,iBAAeC,uBAAf,CAAuCC,GAAvC,EAA4C;AAC3C,SAAK,IAAIC,CAAC,GAAC,CAAX,EAAcA,CAAC,GAACD,GAAhB,EAAqBC,CAAC,EAAtB,EAA0B;AACzB,YAAMC,KAAK,GAAG,MAAMrB,gBAAgB,CAACY,OAAjB,CAAyBU,aAAzB,CAAuCF,CAAvC,EAA0CP,IAA1C,EAApB;AACAU,MAAAA,MAAM,CAACT,IAAP,CAAYO,KAAZ;AACA;;AACDN,IAAAA,OAAO,CAACC,GAAR,CAAYO,MAAZ;AACA;;AAED,iBAAeC,mBAAf,GAAoC;AACnC,UAAMN,uBAAuB,CAAC,MAAMO,uBAAuB,EAA9B,CAA7B;AACA;;AAEDD,EAAAA,mBAAmB;AAEnB,SACC,IADD;AAIA,CA9BD;;AAgCA,eAAehB,YAAf","sourcesContent":["import React from \"react\";\n// These imports are needed to implement Web3, and to connect the React client to the Ethereum server\nimport Web3 from './web3';\nimport { ABI } from './ABI';\nimport { contractAddr } from './Address';\n\nconst web3 = new Web3(Web3.givenProvider);\n// Contract address is provided by Truffle migration\nconst ContractInstance = new web3.eth.Contract(ABI, contractAddr);\nconst accounts = window.ethereum.enable(); //does this need to be async?\nconst account = accounts[0];\n\nconst UserHoldings = () => {\n\n\t// Initialize empty array of Creator Tokens\n\tlet holdings = [];\n\n\tasync function handleUserHoldings() {\n\t\tconst userHoldings = await ContractInstance.methods.userHoldings(account).call();\n\t\tholdings.push(userHoldings)\n\t\tconsole.log(holdings);\n\t\treturn(creatorTokenCount)\n\t}\n\n\tasync function handleCreatorTokenArray(qty) {\n\t\tfor (let i=0; i<qty; i++) {\n\t\t\tconst token = await ContractInstance.methods.creatorTokens(i).call();\n\t\t\ttokens.push(token);\n\t\t}\n\t\tconsole.log(tokens);\n\t}\n\n\tasync function handleCreatorTokens(){\n\t\tawait handleCreatorTokenArray(await handleCreatorTokenCount());\n\t}\n\n\thandleCreatorTokens();\n\n\treturn (\n\t\tnull\n\t);\n\n};\n\nexport default UserHoldings;"]},"metadata":{},"sourceType":"module"}