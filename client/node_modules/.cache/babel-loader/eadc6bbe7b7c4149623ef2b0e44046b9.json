{"ast":null,"code":"var _jsxFileName = \"/Users/kamilalizaisadik/DeFi/Dynamic Automated Market Maker/CreatorTokenExchange/client/src/OwnerDashboard.jsx\";\nimport React, { Component, useState, useEffect } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { tokens } from \"./Inventory.jsx\"; // These imports are needed to implement Web3, and to connect the React client to the Ethereum server\n\nimport Web3 from './web3';\nimport { ABI } from './ABI';\nimport { contractAddr } from './Address';\nconst web3 = new Web3(Web3.givenProvider); // Contract address is provided by Truffle migration\n\nconst ContractInstance = new web3.eth.Contract(ABI, contractAddr);\n\nconst OwnerDashboard = () => {\n  const [currToken, setCurrToken] = React.useState(0); // Initalize open/closed state for verification dialog\n\n  const [verificationOpen, setVerificationOpen] = React.useState(false);\n\n  const handleClickVerificationOpen = () => {\n    setVerificationOpen(true);\n  };\n\n  const handleVerificationClose = () => {\n    setVerificationOpen(false);\n  };\n\n  async function handleWithdraw(e) {\n    e.preventDefault();\n    const accounts = await window.ethereum.enable();\n    const account = accounts[0];\n    const gas = await ContractInstance.methods.withdraw(account).estimateGas({\n      from: account\n    });\n    const result = await ContractInstance.methods.withdraw(account).send({\n      from: account,\n      gas: gas\n    });\n    console.log(result);\n  }\n\n  async function getTotalPlatformFees() {\n    const totalPlatformFees = await ContractInstance.methods.totalPlatformFees().call();\n    return totalPlatformFees;\n  }\n\n  const [totalPlatformFees, setTotalPlatformFees] = useState(0);\n  useEffect(() => {\n    async function fetchData() {\n      setTotalPlatformFees(await getTotalPlatformFees());\n    }\n\n    fetchData();\n  }, []);\n\n  async function getPlatformFeesOwed() {\n    const platformFeesOwed = await ContractInstance.methods.totalPlatformFees().call();\n    return platformFeesOwed;\n  }\n\n  const [platformFeesOwed, setPlatformFeesOwed] = useState(0);\n  useEffect(() => {\n    async function fetchData() {\n      setPlatformFeesOwed(await getPlatformFeesOwed());\n    }\n\n    fetchData();\n  }, []);\n\n  async function handlePayoutPlatformFees(e) {\n    e.preventDefault();\n    const accounts = await window.ethereum.enable();\n    const account = accounts[0];\n    const gas = await ContractInstance.methods.payoutPlatformFees(account).estimateGas({\n      from: account\n    });\n    const result = await ContractInstance.methods.payoutPlatformFees(account).send({\n      from: account,\n      gas: gas\n    });\n    console.log(result);\n  }\n\n  async function handleChangePlatformFee(e, newFee) {\n    e.preventDefault();\n    const accounts = await window.ethereum.enable();\n    const account = accounts[0];\n    const gas = await ContractInstance.methods.changePlatformFee(newFee).estimateGas({\n      from: account\n    });\n    const result = await ContractInstance.methods.changePlatformFee(newFee).send({\n      from: account,\n      gas: gas\n    });\n    console.log(result);\n  }\n\n  async function handleChangeProfitMargin(e, newProfitMargin) {\n    e.preventDefault();\n    const accounts = await window.ethereum.enable();\n    const account = accounts[0];\n    const gas = await ContractInstance.methods.changeProfitMargin(newProfitMargin).estimateGas({\n      from: account\n    });\n    const result = await ContractInstance.methods.changeProfitMargin(newProfitMargin).send({\n      from: account,\n      gas: gas\n    });\n    console.log(result);\n  } // For simplicity, right now calling this automatically sets verification status to true\n\n\n  async function handleChangeVerification(e, creatorTokenId) {\n    e.preventDefault();\n    const accounts = await window.ethereum.enable();\n    const account = accounts[0];\n    const gas = await ContractInstance.methods.changeVerification(creatorTokenId, true).estimateGas({\n      from: account\n    });\n    const result = await ContractInstance.methods.changeVerification(creatorTokenId, true).send({\n      from: account,\n      gas: gas\n    });\n    console.log(result);\n    handleVerificationClose();\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 3\n    }\n  }, getPlatformFeesOwed(), /*#__PURE__*/React.createElement(Button, {\n    variant: \"outlined\",\n    color: \"primary\",\n    onClick: handleClickVerificationOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 4\n    }\n  }, \"Verify a Token\"), /*#__PURE__*/React.createElement(Dialog, {\n    open: verificationOpen,\n    onClose: handleVerificationClose,\n    \"aria-labelledby\": \"form-dialog-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(DialogTitle, {\n    id: \"form-dialog-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 6\n    }\n  }, \"Verify Token\"), /*#__PURE__*/React.createElement(DialogContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(DialogContentText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 8\n    }\n  }, \"Which token do you wish to verify?\"), /*#__PURE__*/React.createElement(TextField, {\n    autoFocus: true,\n    margin: \"dense\",\n    id: \"name\",\n    label: \"Token\",\n    placeholder: \"0\",\n    type: \"number\",\n    fullWidth: true,\n    onChange: event => {\n      setCurrToken(event.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 8\n    }\n  })), /*#__PURE__*/React.createElement(DialogActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: handleVerificationClose,\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 8\n    }\n  }, \"Cancel\"), /*#__PURE__*/React.createElement(Button, {\n    onClick: e => handleChangeVerification(e, currToken),\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 8\n    }\n  }, \"Verify\"))));\n};\n\nexport default OwnerDashboard;","map":{"version":3,"sources":["/Users/kamilalizaisadik/DeFi/Dynamic Automated Market Maker/CreatorTokenExchange/client/src/OwnerDashboard.jsx"],"names":["React","Component","useState","useEffect","Button","TextField","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","tokens","Web3","ABI","contractAddr","web3","givenProvider","ContractInstance","eth","Contract","OwnerDashboard","currToken","setCurrToken","verificationOpen","setVerificationOpen","handleClickVerificationOpen","handleVerificationClose","handleWithdraw","e","preventDefault","accounts","window","ethereum","enable","account","gas","methods","withdraw","estimateGas","from","result","send","console","log","getTotalPlatformFees","totalPlatformFees","call","setTotalPlatformFees","fetchData","getPlatformFeesOwed","platformFeesOwed","setPlatformFeesOwed","handlePayoutPlatformFees","payoutPlatformFees","handleChangePlatformFee","newFee","changePlatformFee","handleChangeProfitMargin","newProfitMargin","changeProfitMargin","handleChangeVerification","creatorTokenId","changeVerification","event","target","value"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,SAArC,QAAsD,OAAtD;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AACA,OAAOC,iBAAP,MAA8B,qCAA9B;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,SAASC,MAAT,QAAuB,iBAAvB,C,CACA;;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,SAASC,GAAT,QAAoB,OAApB;AACA,SAASC,YAAT,QAA6B,WAA7B;AAEA,MAAMC,IAAI,GAAG,IAAIH,IAAJ,CAASA,IAAI,CAACI,aAAd,CAAb,C,CACA;;AACA,MAAMC,gBAAgB,GAAG,IAAIF,IAAI,CAACG,GAAL,CAASC,QAAb,CAAsBN,GAAtB,EAA2BC,YAA3B,CAAzB;;AAEA,MAAMM,cAAc,GAAG,MAAM;AAE5B,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BtB,KAAK,CAACE,QAAN,CAAe,CAAf,CAAlC,CAF4B,CAI5B;;AACA,QAAM,CAACqB,gBAAD,EAAmBC,mBAAnB,IAA0CxB,KAAK,CAACE,QAAN,CAAe,KAAf,CAAhD;;AACA,QAAMuB,2BAA2B,GAAG,MAAM;AACxCD,IAAAA,mBAAmB,CAAC,IAAD,CAAnB;AACD,GAFD;;AAGA,QAAME,uBAAuB,GAAG,MAAM;AACpCF,IAAAA,mBAAmB,CAAC,KAAD,CAAnB;AACD,GAFD;;AAIC,iBAAeG,cAAf,CAA8BC,CAA9B,EAAiC;AAC/BA,IAAAA,CAAC,CAACC,cAAF;AACA,UAAMC,QAAQ,GAAG,MAAMC,MAAM,CAACC,QAAP,CAAgBC,MAAhB,EAAvB;AACA,UAAMC,OAAO,GAAGJ,QAAQ,CAAC,CAAD,CAAxB;AACA,UAAMK,GAAG,GAAG,MAAMlB,gBAAgB,CAACmB,OAAjB,CAAyBC,QAAzB,CAAkCH,OAAlC,EAA2CI,WAA3C,CAAuD;AACvEC,MAAAA,IAAI,EAAEL;AADiE,KAAvD,CAAlB;AAGA,UAAMM,MAAM,GAAG,MAAMvB,gBAAgB,CAACmB,OAAjB,CAAyBC,QAAzB,CAAkCH,OAAlC,EAA2CO,IAA3C,CAAgD;AACnEF,MAAAA,IAAI,EAAEL,OAD6D;AAEnEC,MAAAA,GAAG,EAAEA;AAF8D,KAAhD,CAArB;AAIAO,IAAAA,OAAO,CAACC,GAAR,CAAYH,MAAZ;AACD;;AAED,iBAAeI,oBAAf,GAAsC;AACrC,UAAMC,iBAAiB,GAAG,MAAM5B,gBAAgB,CAACmB,OAAjB,CAAyBS,iBAAzB,GAA6CC,IAA7C,EAAhC;AACA,WAAOD,iBAAP;AACA;;AAED,QAAM,CAACA,iBAAD,EAAoBE,oBAApB,IAA4C7C,QAAQ,CAAC,CAAD,CAA1D;AACAC,EAAAA,SAAS,CAAC,MAAM;AACd,mBAAe6C,SAAf,GAA2B;AACzBD,MAAAA,oBAAoB,CAAC,MAAMH,oBAAoB,EAA3B,CAApB;AACD;;AACDI,IAAAA,SAAS;AACV,GALQ,EAKN,EALM,CAAT;;AAOA,iBAAeC,mBAAf,GAAqC;AACpC,UAAMC,gBAAgB,GAAG,MAAMjC,gBAAgB,CAACmB,OAAjB,CAAyBS,iBAAzB,GAA6CC,IAA7C,EAA/B;AACA,WAAOI,gBAAP;AACA;;AAED,QAAM,CAACA,gBAAD,EAAmBC,mBAAnB,IAA0CjD,QAAQ,CAAC,CAAD,CAAxD;AACAC,EAAAA,SAAS,CAAC,MAAM;AACd,mBAAe6C,SAAf,GAA2B;AACzBG,MAAAA,mBAAmB,CAAC,MAAMF,mBAAmB,EAA1B,CAAnB;AACD;;AACDD,IAAAA,SAAS;AACV,GALQ,EAKN,EALM,CAAT;;AAOA,iBAAeI,wBAAf,CAAwCxB,CAAxC,EAA2C;AACzCA,IAAAA,CAAC,CAACC,cAAF;AACA,UAAMC,QAAQ,GAAG,MAAMC,MAAM,CAACC,QAAP,CAAgBC,MAAhB,EAAvB;AACA,UAAMC,OAAO,GAAGJ,QAAQ,CAAC,CAAD,CAAxB;AACA,UAAMK,GAAG,GAAG,MAAMlB,gBAAgB,CAACmB,OAAjB,CAAyBiB,kBAAzB,CAA4CnB,OAA5C,EAAqDI,WAArD,CAAiE;AACjFC,MAAAA,IAAI,EAAEL;AAD2E,KAAjE,CAAlB;AAGA,UAAMM,MAAM,GAAG,MAAMvB,gBAAgB,CAACmB,OAAjB,CAAyBiB,kBAAzB,CAA4CnB,OAA5C,EAAqDO,IAArD,CAA0D;AAC7EF,MAAAA,IAAI,EAAEL,OADuE;AAE7EC,MAAAA,GAAG,EAAEA;AAFwE,KAA1D,CAArB;AAIAO,IAAAA,OAAO,CAACC,GAAR,CAAYH,MAAZ;AACD;;AAED,iBAAec,uBAAf,CAAuC1B,CAAvC,EAA0C2B,MAA1C,EAAkD;AAChD3B,IAAAA,CAAC,CAACC,cAAF;AACA,UAAMC,QAAQ,GAAG,MAAMC,MAAM,CAACC,QAAP,CAAgBC,MAAhB,EAAvB;AACA,UAAMC,OAAO,GAAGJ,QAAQ,CAAC,CAAD,CAAxB;AACA,UAAMK,GAAG,GAAG,MAAMlB,gBAAgB,CAACmB,OAAjB,CAAyBoB,iBAAzB,CAA2CD,MAA3C,EAAmDjB,WAAnD,CAA+D;AAC/EC,MAAAA,IAAI,EAAEL;AADyE,KAA/D,CAAlB;AAGA,UAAMM,MAAM,GAAG,MAAMvB,gBAAgB,CAACmB,OAAjB,CAAyBoB,iBAAzB,CAA2CD,MAA3C,EAAmDd,IAAnD,CAAwD;AAC3EF,MAAAA,IAAI,EAAEL,OADqE;AAE3EC,MAAAA,GAAG,EAAEA;AAFsE,KAAxD,CAArB;AAIAO,IAAAA,OAAO,CAACC,GAAR,CAAYH,MAAZ;AACD;;AAED,iBAAeiB,wBAAf,CAAwC7B,CAAxC,EAA2C8B,eAA3C,EAA4D;AAC1D9B,IAAAA,CAAC,CAACC,cAAF;AACA,UAAMC,QAAQ,GAAG,MAAMC,MAAM,CAACC,QAAP,CAAgBC,MAAhB,EAAvB;AACA,UAAMC,OAAO,GAAGJ,QAAQ,CAAC,CAAD,CAAxB;AACA,UAAMK,GAAG,GAAG,MAAMlB,gBAAgB,CAACmB,OAAjB,CAAyBuB,kBAAzB,CAA4CD,eAA5C,EAA6DpB,WAA7D,CAAyE;AACzFC,MAAAA,IAAI,EAAEL;AADmF,KAAzE,CAAlB;AAGA,UAAMM,MAAM,GAAG,MAAMvB,gBAAgB,CAACmB,OAAjB,CAAyBuB,kBAAzB,CAA4CD,eAA5C,EAA6DjB,IAA7D,CAAkE;AACrFF,MAAAA,IAAI,EAAEL,OAD+E;AAErFC,MAAAA,GAAG,EAAEA;AAFgF,KAAlE,CAArB;AAIAO,IAAAA,OAAO,CAACC,GAAR,CAAYH,MAAZ;AACD,GA7F0B,CA+F3B;;;AACA,iBAAeoB,wBAAf,CAAwChC,CAAxC,EAA2CiC,cAA3C,EAA2D;AACzDjC,IAAAA,CAAC,CAACC,cAAF;AACA,UAAMC,QAAQ,GAAG,MAAMC,MAAM,CAACC,QAAP,CAAgBC,MAAhB,EAAvB;AACA,UAAMC,OAAO,GAAGJ,QAAQ,CAAC,CAAD,CAAxB;AACA,UAAMK,GAAG,GAAG,MAAMlB,gBAAgB,CAACmB,OAAjB,CAAyB0B,kBAAzB,CAA4CD,cAA5C,EAA4D,IAA5D,EAAkEvB,WAAlE,CAA8E;AAC9FC,MAAAA,IAAI,EAAEL;AADwF,KAA9E,CAAlB;AAGA,UAAMM,MAAM,GAAG,MAAMvB,gBAAgB,CAACmB,OAAjB,CAAyB0B,kBAAzB,CAA4CD,cAA5C,EAA4D,IAA5D,EAAkEpB,IAAlE,CAAuE;AAC1FF,MAAAA,IAAI,EAAEL,OADoF;AAE1FC,MAAAA,GAAG,EAAEA;AAFqF,KAAvE,CAArB;AAIAO,IAAAA,OAAO,CAACC,GAAR,CAAYH,MAAZ;AACAd,IAAAA,uBAAuB;AACxB;;AAEF,sBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACCuB,mBAAmB,EADpB,eAEC,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,UAAhB;AAA2B,IAAA,KAAK,EAAC,SAAjC;AAA2C,IAAA,OAAO,EAAExB,2BAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFD,eAKC,oBAAC,MAAD;AACA,IAAA,IAAI,EAAEF,gBADN;AAEA,IAAA,OAAO,EAAEG,uBAFT;AAGA,uBAAgB,mBAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAIE,oBAAC,WAAD;AAAa,IAAA,EAAE,EAAC,mBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJF,eAOE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0CADF,eAIE,oBAAC,SAAD;AACE,IAAA,SAAS,MADX;AAEE,IAAA,MAAM,EAAC,OAFT;AAGE,IAAA,EAAE,EAAC,MAHL;AAIE,IAAA,KAAK,EAAC,OAJR;AAKE,IAAA,WAAW,EAAC,GALd;AAME,IAAA,IAAI,EAAC,QANP;AAOE,IAAA,SAAS,MAPX;AAQE,IAAA,QAAQ,EAAGqC,KAAD,IAAW;AAACzC,MAAAA,YAAY,CAACyC,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAZ;AAAiC,KARzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,CAPF,eAsBE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AACA,IAAA,OAAO,EAAEvC,uBADT;AAEA,IAAA,KAAK,EAAC,SAFN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAME,oBAAC,MAAD;AACA,IAAA,OAAO,EAAGE,CAAD,IAAOgC,wBAAwB,CAAChC,CAAD,EAAIP,SAAJ,CADxC;AAEA,IAAA,KAAK,EAAC,SAFN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANF,CAtBF,CALD,CADD;AA2CA,CA1JD;;AA4JA,eAAeD,cAAf","sourcesContent":["import React, { Component, useState, useEffect } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { tokens } from \"./Inventory.jsx\";\n// These imports are needed to implement Web3, and to connect the React client to the Ethereum server\nimport Web3 from './web3';\nimport { ABI } from './ABI';\nimport { contractAddr } from './Address';\n\nconst web3 = new Web3(Web3.givenProvider);\n// Contract address is provided by Truffle migration\nconst ContractInstance = new web3.eth.Contract(ABI, contractAddr);\n\nconst OwnerDashboard = () => {\n\n\tconst [currToken, setCurrToken] = React.useState(0);\n\n\t// Initalize open/closed state for verification dialog\n\tconst [verificationOpen, setVerificationOpen] = React.useState(false);\n\tconst handleClickVerificationOpen = () => {\n\t  setVerificationOpen(true);\n\t};\n\tconst handleVerificationClose = () => {\n\t  setVerificationOpen(false);\n\t}\n\n  async function handleWithdraw(e) {\n    e.preventDefault();    \n    const accounts = await window.ethereum.enable();\n    const account = accounts[0];\n    const gas = await ContractInstance.methods.withdraw(account).estimateGas({\n      from: account,\n    });\n    const result = await ContractInstance.methods.withdraw(account).send({\n      from: account,\n      gas: gas\n    })\n    console.log(result);\n  }\n\n  async function getTotalPlatformFees() {\n  \tconst totalPlatformFees = await ContractInstance.methods.totalPlatformFees().call();\n  \treturn(totalPlatformFees);\n  }\n\n  const [totalPlatformFees, setTotalPlatformFees] = useState(0);\n  useEffect(() => {\n    async function fetchData() {\n      setTotalPlatformFees(await getTotalPlatformFees());\n    }\n    fetchData();\n  }, []);\n\n  async function getPlatformFeesOwed() {\n  \tconst platformFeesOwed = await ContractInstance.methods.totalPlatformFees().call();\n  \treturn(platformFeesOwed);\n  }\n\n  const [platformFeesOwed, setPlatformFeesOwed] = useState(0);\n  useEffect(() => {\n    async function fetchData() {\n      setPlatformFeesOwed(await getPlatformFeesOwed());\n    }\n    fetchData();\n  }, []);\n\n  async function handlePayoutPlatformFees(e) {\n    e.preventDefault();    \n    const accounts = await window.ethereum.enable();\n    const account = accounts[0];\n    const gas = await ContractInstance.methods.payoutPlatformFees(account).estimateGas({\n      from: account,\n    });\n    const result = await ContractInstance.methods.payoutPlatformFees(account).send({\n      from: account,\n      gas: gas\n    })\n    console.log(result);\n  }\n\n  async function handleChangePlatformFee(e, newFee) {\n    e.preventDefault();    \n    const accounts = await window.ethereum.enable();\n    const account = accounts[0];\n    const gas = await ContractInstance.methods.changePlatformFee(newFee).estimateGas({\n      from: account,\n    });\n    const result = await ContractInstance.methods.changePlatformFee(newFee).send({\n      from: account,\n      gas: gas\n    })\n    console.log(result);\n  }\n\n  async function handleChangeProfitMargin(e, newProfitMargin) {\n    e.preventDefault();    \n    const accounts = await window.ethereum.enable();\n    const account = accounts[0];\n    const gas = await ContractInstance.methods.changeProfitMargin(newProfitMargin).estimateGas({\n      from: account,\n    });\n    const result = await ContractInstance.methods.changeProfitMargin(newProfitMargin).send({\n      from: account,\n      gas: gas\n    })\n    console.log(result);\n  }\n\n  // For simplicity, right now calling this automatically sets verification status to true\n  async function handleChangeVerification(e, creatorTokenId) {\n    e.preventDefault();    \n    const accounts = await window.ethereum.enable();\n    const account = accounts[0];\n    const gas = await ContractInstance.methods.changeVerification(creatorTokenId, true).estimateGas({\n      from: account,\n    });\n    const result = await ContractInstance.methods.changeVerification(creatorTokenId, true).send({\n      from: account,\n      gas: gas\n    })\n    console.log(result);\n    handleVerificationClose();\n  }\n\n\treturn (\n\t\t<div>\n\t\t{getPlatformFeesOwed()}\n\t\t\t<Button variant=\"outlined\" color=\"primary\" onClick={handleClickVerificationOpen}>\n\t\t\t  Verify a Token\n\t\t\t</Button>\n\t\t\t<Dialog\n\t\t\topen={verificationOpen}\n\t\t\tonClose={handleVerificationClose}\n\t\t\taria-labelledby=\"form-dialog-title\">\n\t\t\t  <DialogTitle id=\"form-dialog-title\">\n\t\t\t  Verify Token\n\t\t\t  </DialogTitle>\n\t\t\t  <DialogContent>\n\t\t\t    <DialogContentText>\n\t\t\t      Which token do you wish to verify?\n\t\t\t    </DialogContentText>\n\t\t\t    <TextField\n\t\t\t      autoFocus\n\t\t\t      margin=\"dense\"\n\t\t\t      id=\"name\"\n\t\t\t      label=\"Token\"\n\t\t\t      placeholder=\"0\"\n\t\t\t      type=\"number\"\n\t\t\t      fullWidth\n\t\t\t      onChange={(event) => {setCurrToken(event.target.value)}}\n\t\t\t    />\n\t\t\t  </DialogContent>\n\t\t\t  <DialogActions>\n\t\t\t    <Button\n\t\t\t    onClick={handleVerificationClose}\n\t\t\t    color=\"primary\">\n\t\t\t      Cancel\n\t\t\t    </Button>\n\t\t\t    <Button\n\t\t\t    onClick={(e) => handleChangeVerification(e, currToken)}\n\t\t\t    color=\"primary\">\n\t\t\t      Verify\n\t\t\t    </Button>\n\t\t\t  </DialogActions>\n\t\t\t</Dialog>\n\t\t</div>\n\t);\n}\n\nexport default OwnerDashboard;"]},"metadata":{},"sourceType":"module"}