{"ast":null,"code":"import React from \"react\"; // These imports are needed to implement Web3, and to connect the React client to the Ethereum server\n\nimport Web3 from './web3';\nimport { ABI } from './ABI';\nimport { contractAddr } from './Address';\nconst web3 = new Web3(Web3.givenProvider); // Contract address is provided by Truffle migration\n\nconst ContractInstance = new web3.eth.Contract(ABI, contractAddr);\n\nasync function handleCreatorTokenCount() {\n  const creatorTokenCount = await ContractInstance.methods.getCreatorTokenCount().call();\n  console.log(creatorTokenCount);\n  return creatorTokenCount;\n}\n\nasync function handleUserHoldingMapping(qty) {\n  // Initialize empty array of Creator Tokens\n  let userHoldings = [];\n  const accounts = await window.ethereum.enable();\n  const account = accounts[0];\n\n  for (let i = 0; i < qty; i++) {\n    const holdings = await ContractInstance.methods.userToHoldings(account, i).call();\n    userHoldings.push(holdings);\n  }\n\n  return userHoldings;\n}\n\nasync function handleUserHoldings() {\n  return handleUserHoldingMapping(await handleCreatorTokenCount());\n}\n\nconst UserHoldings = () => {\n  return null;\n};\n\nconst userHoldings = handleUserHoldings();\nexport default UserHoldings;\nexport { userHoldings };","map":{"version":3,"sources":["/Users/kamilalizaisadik/DeFi/Dynamic Automated Market Maker/CreatorTokenExchange/client/src/UserHoldings.jsx"],"names":["React","Web3","ABI","contractAddr","web3","givenProvider","ContractInstance","eth","Contract","handleCreatorTokenCount","creatorTokenCount","methods","getCreatorTokenCount","call","console","log","handleUserHoldingMapping","qty","userHoldings","accounts","window","ethereum","enable","account","i","holdings","userToHoldings","push","handleUserHoldings","UserHoldings"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,SAASC,GAAT,QAAoB,OAApB;AACA,SAASC,YAAT,QAA6B,WAA7B;AAEA,MAAMC,IAAI,GAAG,IAAIH,IAAJ,CAASA,IAAI,CAACI,aAAd,CAAb,C,CACA;;AACA,MAAMC,gBAAgB,GAAG,IAAIF,IAAI,CAACG,GAAL,CAASC,QAAb,CAAsBN,GAAtB,EAA2BC,YAA3B,CAAzB;;AAEA,eAAeM,uBAAf,GAAyC;AACxC,QAAMC,iBAAiB,GAAG,MAAMJ,gBAAgB,CAACK,OAAjB,CAAyBC,oBAAzB,GAAgDC,IAAhD,EAAhC;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYL,iBAAZ;AACA,SAAOA,iBAAP;AACA;;AAED,eAAeM,wBAAf,CAAwCC,GAAxC,EAA6C;AAC5C;AACA,MAAIC,YAAY,GAAG,EAAnB;AACA,QAAMC,QAAQ,GAAG,MAAMC,MAAM,CAACC,QAAP,CAAgBC,MAAhB,EAAvB;AACA,QAAMC,OAAO,GAAGJ,QAAQ,CAAC,CAAD,CAAxB;;AACA,OAAK,IAAIK,CAAC,GAAC,CAAX,EAAcA,CAAC,GAACP,GAAhB,EAAqBO,CAAC,EAAtB,EAA0B;AACzB,UAAMC,QAAQ,GAAG,MAAMnB,gBAAgB,CAACK,OAAjB,CAAyBe,cAAzB,CAAwCH,OAAxC,EAAiDC,CAAjD,EAAoDX,IAApD,EAAvB;AACAK,IAAAA,YAAY,CAACS,IAAb,CAAkBF,QAAlB;AACA;;AACD,SAAOP,YAAP;AACA;;AAED,eAAeU,kBAAf,GAAmC;AAClC,SAAOZ,wBAAwB,CAAC,MAAMP,uBAAuB,EAA9B,CAA/B;AACA;;AAED,MAAMoB,YAAY,GAAG,MAAM;AAC1B,SACC,IADD;AAGA,CAJD;;AAMA,MAAMX,YAAY,GAAGU,kBAAkB,EAAvC;AAEA,eAAeC,YAAf;AACA,SAASX,YAAT","sourcesContent":["import React from \"react\";\n// These imports are needed to implement Web3, and to connect the React client to the Ethereum server\nimport Web3 from './web3';\nimport { ABI } from './ABI';\nimport { contractAddr } from './Address';\n\nconst web3 = new Web3(Web3.givenProvider);\n// Contract address is provided by Truffle migration\nconst ContractInstance = new web3.eth.Contract(ABI, contractAddr);\n\nasync function handleCreatorTokenCount() {\n\tconst creatorTokenCount = await ContractInstance.methods.getCreatorTokenCount().call();\n\tconsole.log(creatorTokenCount);\n\treturn(creatorTokenCount)\n}\n\nasync function handleUserHoldingMapping(qty) {\n\t// Initialize empty array of Creator Tokens\n\tlet userHoldings = [];\n\tconst accounts = await window.ethereum.enable();\n\tconst account = accounts[0];\n\tfor (let i=0; i<qty; i++) {\n\t\tconst holdings = await ContractInstance.methods.userToHoldings(account, i).call();\n\t\tuserHoldings.push(holdings);\n\t}\n\treturn(userHoldings);\n}\n\nasync function handleUserHoldings(){\n\treturn(handleUserHoldingMapping(await handleCreatorTokenCount()));\n}\n\nconst UserHoldings = () => {\n\treturn (\n\t\tnull\n\t);\n};\n\nconst userHoldings = handleUserHoldings();\n\nexport default UserHoldings;\nexport { userHoldings };"]},"metadata":{},"sourceType":"module"}