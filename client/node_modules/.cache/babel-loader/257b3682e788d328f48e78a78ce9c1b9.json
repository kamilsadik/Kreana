{"ast":null,"code":"var _jsxFileName = \"/Users/kamilalizaisadik/DeFi/Dynamic Automated Market Maker/CreatorTokenExchange/client/src/TokenCard.jsx\";\nimport React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport ShareIcon from \"@material-ui/icons/Share\";\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport { Avatar, IconButton, CardMedia } from \"@material-ui/core\";\nimport Web3 from './web3';\nimport { ABI } from './ABI';\nimport { contractAddr } from './Address'; // These imports are needed for the Dialog\n\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nconst useStyles = makeStyles(() => ({\n  palette: {\n    primary: {\n      light: '#757ce8',\n      main: '#3f50b5',\n      dark: '#002884',\n      contrastText: '#fff'\n    },\n    secondary: {\n      light: '#ff7961',\n      main: '#f44336',\n      dark: '#ba000d',\n      contrastText: '#000'\n    },\n    buy: {\n      light: \"#46d182\",\n      main: \"#46d182\",\n      dark: \"#46d182\",\n      contrastText: \"#46d182\"\n    },\n    sell: {\n      light: \"#f53b6a\",\n      main: \"#f53b6a\",\n      dark: \"#f53b6a\",\n      contrastText: \"#f53b6a\"\n    }\n  }\n}));\nconst web3 = new Web3(Web3.givenProvider); // contract address is provided by Truffle migration\n\nconst ContractInstance = new web3.eth.Contract(ABI, contractAddr);\n\nconst TokenCard = props => {\n  const {\n    address,\n    name,\n    symbol,\n    description,\n    verified,\n    outstanding,\n    maxSupply,\n    tokenId,\n    avatarUrl,\n    imageUrl\n  } = props; // These consts are used in the Dialog\n\n  const [buyOpen, setBuyOpen] = React.useState(false);\n  const [sellOpen, setSellOpen] = React.useState(false);\n\n  const handleClickBuyOpen = () => {\n    setBuyOpen(true);\n  };\n\n  const handleBuyClose = () => {\n    setBuyOpen(false);\n  };\n\n  const handleClickSellOpen = () => {\n    setSellOpen(true);\n  };\n\n  const handleSellClose = () => {\n    setSellOpen(false);\n  };\n\n  const getInitialState = () => {\n    return {\n      textFieldValue: 0\n    };\n  };\n\n  const _handleTextFieldChange = e => {\n    this.setState({\n      textFieldValue: e.target.value\n    });\n  }; //const handleBuyCreatorToken = async (e) => {\n\n\n  async function handleBuyCreatorToken(e, tokenId) {\n    e.preventDefault();\n    const accounts = await window.ethereum.enable();\n    const account = accounts[0]; //const tokenId = 0;\n\n    const proceeds = await ContractInstance.methods._totalProceeds(tokenId, 5000).call({\n      from: account\n    });\n    const gas = await ContractInstance.methods.buyCreatorToken(tokenId, 5000).estimateGas({\n      from: account,\n      value: proceeds\n    });\n    const result = await ContractInstance.methods.buyCreatorToken(tokenId, 5000).send({\n      from: account,\n      gas: gas,\n      value: proceeds\n    });\n    console.log(result);\n    handleBuyClose();\n  } //const handleSellCreatorToken = async (e) => {\n\n\n  async function handleSellCreatorToken(e, tokenId) {\n    e.preventDefault();\n    const accounts = await window.ethereum.enable();\n    const account = accounts[0]; //const tokenId = 0;\n\n    const gas = await ContractInstance.methods.sellCreatorToken(tokenId, 5000, account).estimateGas({\n      from: account\n    });\n    const result = await ContractInstance.methods.sellCreatorToken(tokenId, 5000, account).send({\n      from: account\n    });\n    console.log(result);\n    handleSellClose();\n  }\n\n  return /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    avatar: /*#__PURE__*/React.createElement(Avatar, {\n      src: avatarUrl,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 21\n      }\n    }),\n    title: name,\n    action: verified ? /*#__PURE__*/React.createElement(IconButton, {\n      \"aria-label\": \"settings\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(CheckCircleIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 65\n      }\n    })) : null,\n    subheader: \"$\" + symbol,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(CardMedia, {\n    style: {\n      height: \"150px\"\n    },\n    image: imageUrl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body2\",\n    component: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 13\n    }\n  }, description)), /*#__PURE__*/React.createElement(CardActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"outlined\",\n    color: \"primary\",\n    onClick: handleClickBuyOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 15\n    }\n  }, \"Buy\"), /*#__PURE__*/React.createElement(Dialog, {\n    open: buyOpen,\n    onClose: handleBuyClose,\n    \"aria-labelledby\": \"form-dialog-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(DialogTitle, {\n    id: \"form-dialog-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 17\n    }\n  }, \"Buy Token\"), /*#__PURE__*/React.createElement(DialogContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(DialogContentText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 19\n    }\n  }, \"How many tokens do you wish to purchase?\"), /*#__PURE__*/React.createElement(TextField, {\n    autoFocus: true,\n    margin: \"dense\",\n    id: \"name\",\n    label: \"Quantity\",\n    type: \"email\",\n    fullWidth: true,\n    value: this.state.textFieldValue,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(DialogActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: handleBuyClose,\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 19\n    }\n  }, \"Cancel\"), /*#__PURE__*/React.createElement(Button, {\n    value: tokenId,\n    onClick: e => handleBuyCreatorToken(e, tokenId),\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 19\n    }\n  }, \"Complete Transaction\")))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"outlined\",\n    color: \"primary\",\n    onClick: handleClickSellOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 15\n    }\n  }, \"Sell\"), /*#__PURE__*/React.createElement(Dialog, {\n    open: sellOpen,\n    onClose: handleSellClose,\n    \"aria-labelledby\": \"form-dialog-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(DialogTitle, {\n    id: \"form-dialog-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 17\n    }\n  }, \"Sell Token\"), /*#__PURE__*/React.createElement(DialogContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(DialogContentText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 19\n    }\n  }, \"How many tokens do you wish to sell?\"), /*#__PURE__*/React.createElement(TextField, {\n    autoFocus: true,\n    margin: \"dense\",\n    id: \"name\",\n    label: \"Quantity\",\n    type: \"email\",\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(DialogActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: handleSellClose,\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 19\n    }\n  }, \"Cancel\"), /*#__PURE__*/React.createElement(Button, {\n    value: tokenId,\n    onClick: e => handleSellCreatorToken(e, tokenId),\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 19\n    }\n  }, \"Complete Transaction\"))))));\n};\n\nexport default TokenCard;","map":{"version":3,"sources":["/Users/kamilalizaisadik/DeFi/Dynamic Automated Market Maker/CreatorTokenExchange/client/src/TokenCard.jsx"],"names":["React","makeStyles","Card","CardHeader","CardActions","CardContent","Typography","Button","ShareIcon","CheckCircleIcon","Avatar","IconButton","CardMedia","Web3","ABI","contractAddr","TextField","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","useStyles","palette","primary","light","main","dark","contrastText","secondary","buy","sell","web3","givenProvider","ContractInstance","eth","Contract","TokenCard","props","address","name","symbol","description","verified","outstanding","maxSupply","tokenId","avatarUrl","imageUrl","buyOpen","setBuyOpen","useState","sellOpen","setSellOpen","handleClickBuyOpen","handleBuyClose","handleClickSellOpen","handleSellClose","getInitialState","textFieldValue","_handleTextFieldChange","e","setState","target","value","handleBuyCreatorToken","preventDefault","accounts","window","ethereum","enable","account","proceeds","methods","_totalProceeds","call","from","gas","buyCreatorToken","estimateGas","result","send","console","log","handleSellCreatorToken","sellCreatorToken","height","state"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport ShareIcon from \"@material-ui/icons/Share\";\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\r\nimport { Avatar, IconButton, CardMedia } from \"@material-ui/core\";\r\nimport Web3 from './web3';\r\nimport { ABI } from './ABI';\r\nimport { contractAddr } from './Address';\r\n// These imports are needed for the Dialog\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    palette: {\r\n      primary: {\r\n        light: '#757ce8',\r\n        main: '#3f50b5',\r\n        dark: '#002884',\r\n        contrastText: '#fff',\r\n      },\r\n      secondary: {\r\n        light: '#ff7961',\r\n        main: '#f44336',\r\n        dark: '#ba000d',\r\n        contrastText: '#000',\r\n      },\r\n      buy: {\r\n        light: \"#46d182\",\r\n        main: \"#46d182\",\r\n        dark: \"#46d182\",\r\n        contrastText: \"#46d182\",\r\n      },\r\n      sell: {\r\n        light: \"#f53b6a\",\r\n        main: \"#f53b6a\",\r\n        dark: \"#f53b6a\",\r\n        contrastText: \"#f53b6a\",\r\n      }\r\n    },\r\n  }));\r\n\r\nconst web3 = new Web3(Web3.givenProvider);\r\n// contract address is provided by Truffle migration\r\nconst ContractInstance = new web3.eth.Contract(ABI, contractAddr);\r\n\r\nconst TokenCard = props => {\r\n  const { address, name, symbol, description, verified, outstanding, maxSupply, tokenId, avatarUrl, imageUrl } = props;\r\n\r\n  // These consts are used in the Dialog\r\n  const [buyOpen, setBuyOpen] = React.useState(false);\r\n  const [sellOpen, setSellOpen] = React.useState(false);\r\n  const handleClickBuyOpen = () => {\r\n    setBuyOpen(true);\r\n  };\r\n  const handleBuyClose = () => {\r\n    setBuyOpen(false);\r\n  }\r\n  const handleClickSellOpen = () => {\r\n    setSellOpen(true);\r\n  }\r\n  const handleSellClose = () => {\r\n    setSellOpen(false);\r\n  }\r\n\r\n  const getInitialState = () => {\r\n      return {\r\n          textFieldValue: 0\r\n      };\r\n  }\r\n\r\n  const _handleTextFieldChange = (e) => {\r\n      this.setState({\r\n          textFieldValue: e.target.value\r\n      });\r\n  }\r\n\r\n  //const handleBuyCreatorToken = async (e) => {\r\n  async function handleBuyCreatorToken(e, tokenId) {\r\n    e.preventDefault();    \r\n    const accounts = await window.ethereum.enable();\r\n    const account = accounts[0];\r\n    //const tokenId = 0;\r\n    const proceeds = await ContractInstance.methods._totalProceeds(tokenId, 5000).call({\r\n      from: account,\r\n    });\r\n    const gas = await ContractInstance.methods.buyCreatorToken(tokenId, 5000).estimateGas({\r\n      from: account,\r\n      value: proceeds\r\n    });\r\n    const result = await ContractInstance.methods.buyCreatorToken(tokenId, 5000).send({\r\n      from: account,\r\n      gas: gas,\r\n      value: proceeds\r\n    })\r\n    console.log(result);\r\n    handleBuyClose();\r\n  }\r\n\r\n  //const handleSellCreatorToken = async (e) => {\r\n  async function handleSellCreatorToken(e, tokenId) {\r\n    e.preventDefault();    \r\n    const accounts = await window.ethereum.enable();\r\n    const account = accounts[0];\r\n    //const tokenId = 0;\r\n    const gas = await ContractInstance.methods.sellCreatorToken(tokenId, 5000, account).estimateGas({\r\n      from: account,\r\n    });\r\n    const result = await ContractInstance.methods.sellCreatorToken(tokenId, 5000, account).send({\r\n      from: account\r\n    })\r\n    console.log(result);\r\n    handleSellClose();\r\n  }\r\n\r\n    return (\r\n        <Card>\r\n          <CardHeader\r\n            avatar={<Avatar src={avatarUrl} />}\r\n            title={name}\r\n            action={verified? <IconButton aria-label=\"settings\"><CheckCircleIcon /></IconButton> : null}\r\n            subheader={\"$\"+symbol}\r\n          />\r\n          <CardMedia style={{ height: \"150px\" }} image={imageUrl} />\r\n          <CardContent>\r\n            <Typography variant=\"body2\" component=\"p\">\r\n              {description}\r\n            </Typography>\r\n          </CardContent>\r\n          <CardActions>\r\n            <div>\r\n              <Button variant=\"outlined\" color=\"primary\" onClick={handleClickBuyOpen}>\r\n                Buy\r\n              </Button>\r\n              <Dialog open={buyOpen} onClose={handleBuyClose} aria-labelledby=\"form-dialog-title\">\r\n                <DialogTitle id=\"form-dialog-title\">Buy Token</DialogTitle>\r\n                <DialogContent>\r\n                  <DialogContentText>\r\n                    How many tokens do you wish to purchase?\r\n                  </DialogContentText>\r\n                  <TextField\r\n                    autoFocus\r\n                    margin=\"dense\"\r\n                    id=\"name\"\r\n                    label=\"Quantity\"\r\n                    type=\"email\"\r\n                    fullWidth\r\n                    value={this.state.textFieldValue}\r\n                  />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                  <Button onClick={handleBuyClose} color=\"primary\">\r\n                    Cancel\r\n                  </Button>\r\n                  <Button\r\n                  value={tokenId}\r\n                  onClick={(e) => handleBuyCreatorToken(e, tokenId)}\r\n                  color=\"primary\">\r\n                    Complete Transaction\r\n                  </Button>\r\n                </DialogActions>\r\n              </Dialog>\r\n            </div>\r\n            <div>\r\n              <Button variant=\"outlined\" color=\"primary\" onClick={handleClickSellOpen}>\r\n                Sell\r\n              </Button>\r\n              <Dialog open={sellOpen} onClose={handleSellClose} aria-labelledby=\"form-dialog-title\">\r\n                <DialogTitle id=\"form-dialog-title\">Sell Token</DialogTitle>\r\n                <DialogContent>\r\n                  <DialogContentText>\r\n                    How many tokens do you wish to sell?\r\n                  </DialogContentText>\r\n                  <TextField\r\n                    autoFocus\r\n                    margin=\"dense\"\r\n                    id=\"name\"\r\n                    label=\"Quantity\"\r\n                    type=\"email\"\r\n                    fullWidth\r\n                  />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                  <Button onClick={handleSellClose} color=\"primary\">\r\n                    Cancel\r\n                  </Button>\r\n                  <Button\r\n                  value={tokenId}\r\n                  onClick={(e) => handleSellCreatorToken(e, tokenId)}\r\n                  color=\"primary\">\r\n                    Complete Transaction\r\n                  </Button>\r\n                </DialogActions>\r\n              </Dialog>\r\n            </div>\r\n          </CardActions>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default TokenCard;\r\n"]},"metadata":{},"sourceType":"module"}