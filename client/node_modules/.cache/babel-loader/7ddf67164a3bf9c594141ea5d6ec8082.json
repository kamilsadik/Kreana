{"ast":null,"code":"import React from \"react\"; // These imports are needed to implement Web3, and to connect the React client to the Ethereum server\n\nimport Web3 from './web3';\nimport { ABI } from './ABI';\nimport { contractAddr } from './Address';\nconst web3 = new Web3(Web3.givenProvider); // Contract address is provided by Truffle migration\n\nconst ContractInstance = new web3.eth.Contract(ABI, contractAddr);\n\nasync function handleCreatorTokenCount() {\n  const creatorTokenCount = await ContractInstance.methods.getCreatorTokenCount().call();\n  console.log(creatorTokenCount);\n  return creatorTokenCount;\n}\n\nasync function handleCreatorTokenArray(qty) {\n  // Initialize empty array of Creator Tokens\n  let tokens = [];\n\n  for (let i = 0; i < qty; i++) {\n    const token = await ContractInstance.methods.creatorTokens(i).call();\n    tokens.push(token);\n  } //console.log(tokens);\n\n\n  return tokens;\n}\n\nasync function handleCreatorTokens() {\n  return handleCreatorTokenArray(await handleCreatorTokenCount()); //return(tokens);\n}\n\nconst Inventory = () => {\n  return null;\n};\n\nconst tokens = handleCreatorTokens();\nexport default Inventory;\nexport { tokens }; //export { tokens: handleCreatorTokens() }","map":{"version":3,"sources":["/Users/kamilalizaisadik/DeFi/Dynamic Automated Market Maker/CreatorTokenExchange/client/src/Inventory.jsx"],"names":["React","Web3","ABI","contractAddr","web3","givenProvider","ContractInstance","eth","Contract","handleCreatorTokenCount","creatorTokenCount","methods","getCreatorTokenCount","call","console","log","handleCreatorTokenArray","qty","tokens","i","token","creatorTokens","push","handleCreatorTokens","Inventory"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,SAASC,GAAT,QAAoB,OAApB;AACA,SAASC,YAAT,QAA6B,WAA7B;AAEA,MAAMC,IAAI,GAAG,IAAIH,IAAJ,CAASA,IAAI,CAACI,aAAd,CAAb,C,CACA;;AACA,MAAMC,gBAAgB,GAAG,IAAIF,IAAI,CAACG,GAAL,CAASC,QAAb,CAAsBN,GAAtB,EAA2BC,YAA3B,CAAzB;;AAEA,eAAeM,uBAAf,GAAyC;AACxC,QAAMC,iBAAiB,GAAG,MAAMJ,gBAAgB,CAACK,OAAjB,CAAyBC,oBAAzB,GAAgDC,IAAhD,EAAhC;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYL,iBAAZ;AACA,SAAOA,iBAAP;AACA;;AAED,eAAeM,uBAAf,CAAuCC,GAAvC,EAA4C;AAC3C;AACA,MAAIC,MAAM,GAAG,EAAb;;AACA,OAAK,IAAIC,CAAC,GAAC,CAAX,EAAcA,CAAC,GAACF,GAAhB,EAAqBE,CAAC,EAAtB,EAA0B;AACzB,UAAMC,KAAK,GAAG,MAAMd,gBAAgB,CAACK,OAAjB,CAAyBU,aAAzB,CAAuCF,CAAvC,EAA0CN,IAA1C,EAApB;AACAK,IAAAA,MAAM,CAACI,IAAP,CAAYF,KAAZ;AACA,GAN0C,CAO3C;;;AACA,SAAOF,MAAP;AACA;;AAED,eAAeK,mBAAf,GAAoC;AACnC,SAAOP,uBAAuB,CAAC,MAAMP,uBAAuB,EAA9B,CAA9B,CADmC,CAEnC;AACA;;AAED,MAAMe,SAAS,GAAG,MAAM;AACvB,SACC,IADD;AAGA,CAJD;;AAMA,MAAMN,MAAM,GAAGK,mBAAmB,EAAlC;AAGA,eAAeC,SAAf;AACA,SAASN,MAAT,G,CACA","sourcesContent":["import React from \"react\";\n// These imports are needed to implement Web3, and to connect the React client to the Ethereum server\nimport Web3 from './web3';\nimport { ABI } from './ABI';\nimport { contractAddr } from './Address';\n\nconst web3 = new Web3(Web3.givenProvider);\n// Contract address is provided by Truffle migration\nconst ContractInstance = new web3.eth.Contract(ABI, contractAddr);\n\nasync function handleCreatorTokenCount() {\n\tconst creatorTokenCount = await ContractInstance.methods.getCreatorTokenCount().call();\n\tconsole.log(creatorTokenCount);\n\treturn(creatorTokenCount);\n}\n\nasync function handleCreatorTokenArray(qty) {\n\t// Initialize empty array of Creator Tokens\n\tlet tokens = [];\n\tfor (let i=0; i<qty; i++) {\n\t\tconst token = await ContractInstance.methods.creatorTokens(i).call();\n\t\ttokens.push(token);\n\t}\n\t//console.log(tokens);\n\treturn(tokens);\n}\n\nasync function handleCreatorTokens(){\n\treturn(handleCreatorTokenArray(await handleCreatorTokenCount()));\n\t//return(tokens);\n}\n\nconst Inventory = () => {\n\treturn (\n\t\tnull\n\t);\n};\n\nconst tokens = handleCreatorTokens();\n\n\nexport default Inventory;\nexport { tokens };\n//export { tokens: handleCreatorTokens() }"]},"metadata":{},"sourceType":"module"}