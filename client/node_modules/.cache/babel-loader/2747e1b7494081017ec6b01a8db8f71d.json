{"ast":null,"code":"var _jsxFileName = \"/Users/kamilalizaisadik/DeFi/Dynamic Automated Market Maker/CreatorTokenExchange/client/src/TokenCard.jsx\";\nimport React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport ShareIcon from \"@material-ui/icons/Share\";\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport { Avatar, IconButton, CardMedia } from \"@material-ui/core\";\nimport Web3 from './web3';\nimport { ABI } from './ABI';\nimport { contractAddr } from './Address';\nconst useStyles = makeStyles(() => ({\n  palette: {\n    primary: {\n      light: '#757ce8',\n      main: '#3f50b5',\n      dark: '#002884',\n      contrastText: '#fff'\n    },\n    secondary: {\n      light: '#ff7961',\n      main: '#f44336',\n      dark: '#ba000d',\n      contrastText: '#000'\n    },\n    buy: {\n      light: \"#46d182\",\n      main: \"#46d182\",\n      dark: \"#46d182\",\n      contrastText: \"#46d182\"\n    },\n    sell: {\n      light: \"#f53b6a\",\n      main: \"#f53b6a\",\n      dark: \"#f53b6a\",\n      contrastText: \"#f53b6a\"\n    }\n  }\n}));\n\nconst ConditionalWrapper = ({\n  condition,\n  wrapper,\n  children\n}) => condition ? wrapper(children) : children;\n\nconst web3 = new Web3(Web3.givenProvider); // contract address is provided by Truffle migration\n\nconst ContractInstance = new web3.eth.Contract(ABI, contractAddr);\n\nconst handleBuyCreatorToken = async e => {\n  e.preventDefault();\n  const accounts = await window.ethereum.enable();\n  const account = accounts[0];\n  const proceeds = await ContractInstance.methods._totalProceeds(id, 5000).call({\n    from: account\n  });\n  const gas = await ContractInstance.methods.buyCreatorToken(id, 5000).estimateGas({\n    from: account,\n    value: proceeds\n  });\n  const result = await ContractInstance.methods.buyCreatorToken(id, 5000).send({\n    from: account,\n    gas: gas,\n    value: proceeds\n  });\n  console.log(result);\n};\n\nconst handleSellCreatorToken = async e => {\n  e.preventDefault();\n  const accounts = await window.ethereum.enable();\n  const account = accounts[0];\n  const gas = await ContractInstance.methods.sellCreatorToken(id, 5000, account).estimateGas({\n    from: account\n  });\n  const result = await ContractInstance.methods.sellCreatorToken(id, 5000, account).send({\n    from: account\n  });\n  console.log(result);\n};\n\nconst TokenCard = props => {\n  const {\n    address,\n    name,\n    symbol,\n    description,\n    verified,\n    outstanding,\n    maxSupply,\n    avatarUrl,\n    imageUrl\n  } = props;\n  return /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    avatar: /*#__PURE__*/React.createElement(Avatar, {\n      src: avatarUrl,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 21\n      }\n    }),\n    title: name,\n    action: verified ? /*#__PURE__*/React.createElement(IconButton, {\n      \"aria-label\": \"settings\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(CheckCircleIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 65\n      }\n    })) : null,\n    subheader: \"$\" + symbol,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(CardMedia, {\n    style: {\n      height: \"150px\"\n    },\n    image: imageUrl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(CardActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: handleBuyCreatorToken,\n    size: \"small\",\n    color: \"buy\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }\n  }, \"BUY\"), /*#__PURE__*/React.createElement(Button, {\n    onClick: handleSellCreatorToken,\n    size: \"small\",\n    color: \"sell\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }\n  }, \"SELL\")));\n};\n\nexport default TokenCard;","map":{"version":3,"sources":["/Users/kamilalizaisadik/DeFi/Dynamic Automated Market Maker/CreatorTokenExchange/client/src/TokenCard.jsx"],"names":["React","makeStyles","Card","CardHeader","CardActions","CardContent","Typography","Button","ShareIcon","CheckCircleIcon","Avatar","IconButton","CardMedia","Web3","ABI","contractAddr","useStyles","palette","primary","light","main","dark","contrastText","secondary","buy","sell","ConditionalWrapper","condition","wrapper","children","web3","givenProvider","ContractInstance","eth","Contract","handleBuyCreatorToken","e","preventDefault","accounts","window","ethereum","enable","account","proceeds","methods","_totalProceeds","id","call","from","gas","buyCreatorToken","estimateGas","value","result","send","console","log","handleSellCreatorToken","sellCreatorToken","TokenCard","props","address","name","symbol","description","verified","outstanding","maxSupply","avatarUrl","imageUrl","height"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport ShareIcon from \"@material-ui/icons/Share\";\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\r\nimport { Avatar, IconButton, CardMedia } from \"@material-ui/core\";\r\nimport Web3 from './web3';\r\nimport { ABI } from './ABI';\r\nimport { contractAddr } from './Address';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    palette: {\r\n      primary: {\r\n        light: '#757ce8',\r\n        main: '#3f50b5',\r\n        dark: '#002884',\r\n        contrastText: '#fff',\r\n      },\r\n      secondary: {\r\n        light: '#ff7961',\r\n        main: '#f44336',\r\n        dark: '#ba000d',\r\n        contrastText: '#000',\r\n      },\r\n      buy: {\r\n        light: \"#46d182\",\r\n        main: \"#46d182\",\r\n        dark: \"#46d182\",\r\n        contrastText: \"#46d182\",\r\n      },\r\n      sell: {\r\n        light: \"#f53b6a\",\r\n        main: \"#f53b6a\",\r\n        dark: \"#f53b6a\",\r\n        contrastText: \"#f53b6a\",\r\n      }\r\n    },\r\n  }));\r\n\r\nconst ConditionalWrapper = ({ condition, wrapper, children }) => \r\n  condition ? wrapper(children) : children;\r\n\r\nconst web3 = new Web3(Web3.givenProvider);\r\n// contract address is provided by Truffle migration\r\nconst ContractInstance = new web3.eth.Contract(ABI, contractAddr);\r\n\r\nconst handleBuyCreatorToken = async (e) => {\r\n  e.preventDefault();    \r\n  const accounts = await window.ethereum.enable();\r\n  const account = accounts[0];\r\n  const proceeds = await ContractInstance.methods._totalProceeds(id,5000).call({\r\n    from: account,\r\n  });\r\n  const gas = await ContractInstance.methods.buyCreatorToken(id, 5000).estimateGas({\r\n    from: account,\r\n    value: proceeds\r\n  });\r\n  const result = await ContractInstance.methods.buyCreatorToken(id, 5000).send({\r\n    from: account,\r\n    gas: gas,\r\n    value: proceeds\r\n  })\r\n  console.log(result);\r\n}\r\n\r\nconst handleSellCreatorToken = async (e) => {\r\n  e.preventDefault();    \r\n  const accounts = await window.ethereum.enable();\r\n  const account = accounts[0];\r\n  const gas = await ContractInstance.methods.sellCreatorToken(id, 5000, account).estimateGas({\r\n    from: account,\r\n  });\r\n  const result = await ContractInstance.methods.sellCreatorToken(id, 5000, account).send({\r\n    from: account\r\n  })\r\n  console.log(result);\r\n}\r\n\r\nconst TokenCard = props => {\r\n  const { address, name, symbol, description, verified, outstanding, maxSupply, avatarUrl, imageUrl } = props;\r\n    return (\r\n        <Card>\r\n          <CardHeader\r\n            avatar={<Avatar src={avatarUrl} />}\r\n            title={name}\r\n            action={verified? <IconButton aria-label=\"settings\"><CheckCircleIcon /></IconButton> : null}\r\n            subheader={\"$\"+symbol}\r\n          />\r\n          <CardMedia style={{ height: \"150px\" }} image={imageUrl} />\r\n          {/*\r\n          <CardContent>\r\n            <Typography variant=\"body2\" component=\"p\">\r\n              {description}\r\n            </Typography>\r\n          </CardContent>\r\n          */}\r\n          <CardActions>\r\n            <Button\r\n            onClick={handleBuyCreatorToken}\r\n            size=\"small\"\r\n            color=\"buy\">\r\n            BUY\r\n            </Button>\r\n            <Button\r\n            onClick={handleSellCreatorToken}\r\n            size=\"small\"\r\n            color=\"sell\">\r\n            SELL\r\n            </Button>\r\n          </CardActions>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default TokenCard;\r\n"]},"metadata":{},"sourceType":"module"}