{"ast":null,"code":"var _jsxFileName = \"/Users/kamilalizaisadik/DeFi/Dynamic Automated Market Maker/CreatorTokenExchange/client/src/TokenCard.jsx\";\nimport React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport ShareIcon from \"@material-ui/icons/Share\";\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport { Avatar, IconButton, CardMedia } from \"@material-ui/core\";\nimport Web3 from './web3';\nimport { ABI } from './ABI';\nimport { contractAddr } from './Address'; // These imports are needed for the Dialog\n\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nconst useStyles = makeStyles(() => ({\n  palette: {\n    primary: {\n      light: '#757ce8',\n      main: '#3f50b5',\n      dark: '#002884',\n      contrastText: '#fff'\n    },\n    secondary: {\n      light: '#ff7961',\n      main: '#f44336',\n      dark: '#ba000d',\n      contrastText: '#000'\n    },\n    buy: {\n      light: \"#46d182\",\n      main: \"#46d182\",\n      dark: \"#46d182\",\n      contrastText: \"#46d182\"\n    },\n    sell: {\n      light: \"#f53b6a\",\n      main: \"#f53b6a\",\n      dark: \"#f53b6a\",\n      contrastText: \"#f53b6a\"\n    }\n  }\n}));\nconst web3 = new Web3(Web3.givenProvider); // Contract address is provided by Truffle migration\n\nconst ContractInstance = new web3.eth.Contract(ABI, contractAddr);\n\nconst TokenCard = props => {\n  const {\n    address,\n    name,\n    symbol,\n    description,\n    verified,\n    outstanding,\n    maxSupply,\n    tokenId,\n    avatarUrl,\n    imageUrl\n  } = props; // Initalize open/closed state for buy dialog\n\n  const [buyOpen, setBuyOpen] = React.useState(false);\n\n  const handleClickBuyOpen = () => {\n    setBuyOpen(true);\n  };\n\n  const handleBuyClose = () => {\n    setBuyOpen(false);\n  }; // Initialze open/closed state for sell dialog\n\n\n  const [sellOpen, setSellOpen] = React.useState(false);\n\n  const handleClickSellOpen = () => {\n    setSellOpen(true);\n  };\n\n  const handleSellClose = () => {\n    setSellOpen(false);\n  }; // Initialize state for user-specified amount in text field\n\n\n  const [amount, setAmount] = React.useState(0); // Invoke buyCreatorToken\n\n  async function handleBuyCreatorToken(e, tokenId) {\n    e.preventDefault();\n    const accounts = await window.ethereum.enable();\n    const account = accounts[0]; //const tokenId = 0;\n\n    const proceeds = await ContractInstance.methods._totalProceeds(tokenId, amount).call({\n      from: account\n    });\n    const gas = await ContractInstance.methods.buyCreatorToken(tokenId, amount).estimateGas({\n      from: account,\n      value: proceeds\n    });\n    const result = await ContractInstance.methods.buyCreatorToken(tokenId, amount).send({\n      from: account,\n      gas: gas,\n      value: proceeds\n    });\n    console.log(result);\n    handleBuyClose();\n  } // Compute proceeds required for transaction\n\n\n  async function handleTotalBuyProceeds(e, tokenId) {\n    e.preventDefault();\n    const accounts = await window.ethereum.enable();\n    const account = accounts[0];\n    const result = await ContractInstance.methods._totalProceeds(tokenId, amount).call({\n      from: account\n    });\n    return result;\n  } // Invoke sellCreatorToken\n\n\n  async function handleSellCreatorToken(e, tokenId) {\n    //e.preventDefault();    \n    const accounts = await window.ethereum.enable();\n    const account = accounts[0]; //const tokenId = 0;\n\n    const gas = await ContractInstance.methods.sellCreatorToken(tokenId, amount, account).estimateGas({\n      from: account\n    });\n    const result = await ContractInstance.methods.sellCreatorToken(tokenId, amount, account).send({\n      from: account\n    });\n    console.log(result);\n    handleSellClose();\n  }\n\n  return /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    avatar: /*#__PURE__*/React.createElement(Avatar, {\n      src: avatarUrl,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 21\n      }\n    }),\n    title: name,\n    action: verified ? /*#__PURE__*/React.createElement(IconButton, {\n      \"aria-label\": \"settings\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(CheckCircleIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 65\n      }\n    })) : null,\n    subheader: \"$\" + symbol,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(CardMedia, {\n    style: {\n      height: \"150px\"\n    },\n    image: imageUrl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body2\",\n    component: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 13\n    }\n  }, description)), /*#__PURE__*/React.createElement(CardActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"outlined\",\n    color: \"primary\",\n    onClick: handleClickBuyOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 15\n    }\n  }, \"Buy\"), /*#__PURE__*/React.createElement(Dialog, {\n    open: buyOpen,\n    onClose: handleBuyClose,\n    \"aria-labelledby\": \"form-dialog-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(DialogTitle, {\n    id: \"form-dialog-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 17\n    }\n  }, \"Buy Token\"), /*#__PURE__*/React.createElement(DialogContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(DialogContentText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 19\n    }\n  }, \"How many tokens do you wish to purchase?\"), /*#__PURE__*/React.createElement(TextField, {\n    autoFocus: true,\n    margin: \"dense\",\n    id: \"name\",\n    label: \"Quantity\",\n    type: \"email\",\n    fullWidth: true,\n    value: amount,\n    onChange: event => {\n      setAmount(event.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(DialogActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: handleBuyClose,\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 19\n    }\n  }, \"Cancel\"), /*#__PURE__*/React.createElement(Button, {\n    value: tokenId,\n    onClick: e => handleBuyCreatorToken(e, tokenId, amount),\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 19\n    }\n  }, \"Complete Transaction for \", handleTotalBuyProceeds(tokenId))))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"outlined\",\n    color: \"primary\",\n    onClick: handleClickSellOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 15\n    }\n  }, \"Sell\"), /*#__PURE__*/React.createElement(Dialog, {\n    open: sellOpen,\n    onClose: handleSellClose,\n    \"aria-labelledby\": \"form-dialog-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(DialogTitle, {\n    id: \"form-dialog-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 17\n    }\n  }, \"Sell Token\"), /*#__PURE__*/React.createElement(DialogContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(DialogContentText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 19\n    }\n  }, \"How many tokens do you wish to sell?\"), /*#__PURE__*/React.createElement(TextField, {\n    autoFocus: true,\n    margin: \"dense\",\n    id: \"name\",\n    label: \"Quantity\",\n    type: \"email\",\n    fullWidth: true,\n    value: amount,\n    onChange: event => {\n      setAmount(event.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(DialogActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: handleSellClose,\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 19\n    }\n  }, \"Cancel\"), /*#__PURE__*/React.createElement(Button, {\n    value: tokenId,\n    onClick: e => handleSellCreatorToken(e, tokenId, amount),\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 19\n    }\n  }, \"Complete Transaction\"))))));\n};\n\nexport default TokenCard;","map":{"version":3,"sources":["/Users/kamilalizaisadik/DeFi/Dynamic Automated Market Maker/CreatorTokenExchange/client/src/TokenCard.jsx"],"names":["React","makeStyles","Card","CardHeader","CardActions","CardContent","Typography","Button","ShareIcon","CheckCircleIcon","Avatar","IconButton","CardMedia","Web3","ABI","contractAddr","TextField","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","useStyles","palette","primary","light","main","dark","contrastText","secondary","buy","sell","web3","givenProvider","ContractInstance","eth","Contract","TokenCard","props","address","name","symbol","description","verified","outstanding","maxSupply","tokenId","avatarUrl","imageUrl","buyOpen","setBuyOpen","useState","handleClickBuyOpen","handleBuyClose","sellOpen","setSellOpen","handleClickSellOpen","handleSellClose","amount","setAmount","handleBuyCreatorToken","e","preventDefault","accounts","window","ethereum","enable","account","proceeds","methods","_totalProceeds","call","from","gas","buyCreatorToken","estimateGas","value","result","send","console","log","handleTotalBuyProceeds","handleSellCreatorToken","sellCreatorToken","height","event","target"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport ShareIcon from \"@material-ui/icons/Share\";\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\r\nimport { Avatar, IconButton, CardMedia } from \"@material-ui/core\";\r\nimport Web3 from './web3';\r\nimport { ABI } from './ABI';\r\nimport { contractAddr } from './Address';\r\n// These imports are needed for the Dialog\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    palette: {\r\n      primary: {\r\n        light: '#757ce8',\r\n        main: '#3f50b5',\r\n        dark: '#002884',\r\n        contrastText: '#fff',\r\n      },\r\n      secondary: {\r\n        light: '#ff7961',\r\n        main: '#f44336',\r\n        dark: '#ba000d',\r\n        contrastText: '#000',\r\n      },\r\n      buy: {\r\n        light: \"#46d182\",\r\n        main: \"#46d182\",\r\n        dark: \"#46d182\",\r\n        contrastText: \"#46d182\",\r\n      },\r\n      sell: {\r\n        light: \"#f53b6a\",\r\n        main: \"#f53b6a\",\r\n        dark: \"#f53b6a\",\r\n        contrastText: \"#f53b6a\",\r\n      }\r\n    },\r\n  }));\r\n\r\nconst web3 = new Web3(Web3.givenProvider);\r\n// Contract address is provided by Truffle migration\r\nconst ContractInstance = new web3.eth.Contract(ABI, contractAddr);\r\n\r\nconst TokenCard = props => {\r\n  const { address, name, symbol, description, verified, outstanding, maxSupply, tokenId, avatarUrl, imageUrl } = props;\r\n\r\n  // Initalize open/closed state for buy dialog\r\n  const [buyOpen, setBuyOpen] = React.useState(false);\r\n  const handleClickBuyOpen = () => {\r\n    setBuyOpen(true);\r\n  };\r\n  const handleBuyClose = () => {\r\n    setBuyOpen(false);\r\n  }\r\n\r\n  // Initialze open/closed state for sell dialog\r\n  const [sellOpen, setSellOpen] = React.useState(false);\r\n  const handleClickSellOpen = () => {\r\n    setSellOpen(true);\r\n  }\r\n  const handleSellClose = () => {\r\n    setSellOpen(false);\r\n  }\r\n\r\n  // Initialize state for user-specified amount in text field\r\n  const [amount, setAmount] = React.useState(0);\r\n\r\n  // Invoke buyCreatorToken\r\n  async function handleBuyCreatorToken(e, tokenId) {\r\n    e.preventDefault();    \r\n    const accounts = await window.ethereum.enable();\r\n    const account = accounts[0];\r\n    //const tokenId = 0;\r\n    const proceeds = await ContractInstance.methods._totalProceeds(tokenId, amount).call({\r\n      from: account,\r\n    });\r\n    const gas = await ContractInstance.methods.buyCreatorToken(tokenId, amount).estimateGas({\r\n      from: account,\r\n      value: proceeds\r\n    });\r\n    const result = await ContractInstance.methods.buyCreatorToken(tokenId, amount).send({\r\n      from: account,\r\n      gas: gas,\r\n      value: proceeds\r\n    })\r\n    console.log(result);\r\n    handleBuyClose();\r\n  }\r\n\r\n  // Compute proceeds required for transaction\r\n  async function handleTotalBuyProceeds(e, tokenId) {\r\n    e.preventDefault();\r\n    const accounts = await window.ethereum.enable();\r\n    const account = accounts[0];\r\n    const result = await ContractInstance.methods._totalProceeds(tokenId, amount).call({\r\n      from: account,\r\n    });\r\n    return (\r\n      result\r\n    );\r\n  }\r\n\r\n  // Invoke sellCreatorToken\r\n  async function handleSellCreatorToken(e, tokenId) {\r\n    //e.preventDefault();    \r\n    const accounts = await window.ethereum.enable();\r\n    const account = accounts[0];\r\n    //const tokenId = 0;\r\n    const gas = await ContractInstance.methods.sellCreatorToken(tokenId, amount, account).estimateGas({\r\n      from: account,\r\n    });\r\n    const result = await ContractInstance.methods.sellCreatorToken(tokenId, amount, account).send({\r\n      from: account\r\n    })\r\n    console.log(result);\r\n    handleSellClose();\r\n  }\r\n\r\n    return (\r\n        <Card>\r\n          <CardHeader\r\n            avatar={<Avatar src={avatarUrl} />}\r\n            title={name}\r\n            action={verified? <IconButton aria-label=\"settings\"><CheckCircleIcon /></IconButton> : null}\r\n            subheader={\"$\"+symbol}\r\n          />\r\n          <CardMedia style={{ height: \"150px\" }} image={imageUrl} />\r\n          <CardContent>\r\n            <Typography variant=\"body2\" component=\"p\">\r\n              {description}\r\n            </Typography>\r\n          </CardContent>\r\n          <CardActions>\r\n            <div>\r\n              <Button variant=\"outlined\" color=\"primary\" onClick={handleClickBuyOpen}>\r\n                Buy\r\n              </Button>\r\n              <Dialog open={buyOpen} onClose={handleBuyClose} aria-labelledby=\"form-dialog-title\">\r\n                <DialogTitle id=\"form-dialog-title\">Buy Token</DialogTitle>\r\n                <DialogContent>\r\n                  <DialogContentText>\r\n                    How many tokens do you wish to purchase?\r\n                  </DialogContentText>\r\n                  <TextField\r\n                    autoFocus\r\n                    margin=\"dense\"\r\n                    id=\"name\"\r\n                    label=\"Quantity\"\r\n                    type=\"email\"\r\n                    fullWidth\r\n                    value={amount}\r\n                    onChange={(event) => {setAmount(event.target.value)}}\r\n                  />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                  <Button onClick={handleBuyClose} color=\"primary\">\r\n                    Cancel\r\n                  </Button>\r\n                  <Button\r\n                  value={tokenId}\r\n                  onClick={(e) => handleBuyCreatorToken(e, tokenId, amount)}\r\n                  color=\"primary\">\r\n                    Complete Transaction for {handleTotalBuyProceeds(tokenId)}\r\n                  </Button>\r\n                </DialogActions>\r\n              </Dialog>\r\n            </div>\r\n            <div>\r\n              <Button variant=\"outlined\" color=\"primary\" onClick={handleClickSellOpen}>\r\n                Sell\r\n              </Button>\r\n              <Dialog open={sellOpen} onClose={handleSellClose} aria-labelledby=\"form-dialog-title\">\r\n                <DialogTitle id=\"form-dialog-title\">Sell Token</DialogTitle>\r\n                <DialogContent>\r\n                  <DialogContentText>\r\n                    How many tokens do you wish to sell?\r\n                  </DialogContentText>\r\n                  <TextField\r\n                    autoFocus\r\n                    margin=\"dense\"\r\n                    id=\"name\"\r\n                    label=\"Quantity\"\r\n                    type=\"email\"\r\n                    fullWidth\r\n                    value={amount}\r\n                    onChange={(event) => {setAmount(event.target.value)}}\r\n                  />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                  <Button onClick={handleSellClose} color=\"primary\">\r\n                    Cancel\r\n                  </Button>\r\n                  <Button\r\n                  value={tokenId}\r\n                  onClick={(e) => handleSellCreatorToken(e, tokenId, amount)}\r\n                  color=\"primary\">\r\n                    Complete Transaction\r\n                  </Button>\r\n                </DialogActions>\r\n              </Dialog>\r\n            </div>\r\n          </CardActions>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default TokenCard;\r\n"]},"metadata":{},"sourceType":"module"}